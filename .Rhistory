df_long$pathway <- factor(df_long$pathway, levels = c("CurrentTrends", "NationalCommitments", "GlobalSustainability"))
plot_list <- list()
for (current_pathway in unique_pathways) {
p <- ggplot(df_long, aes(x = Year, y = Emission, fill = Gas)) +
geom_area() +
labs(title = paste("AFOLU GHG emissions"), x = "Year", y = "MtCO2eq", fill = "") +
scale_fill_manual(values = gas_colors, labels = gas_labels, breaks = names(gas_labels)) +
scale_y_continuous(breaks = c(-2500, 0, 5000, 10000)) +
# geom_line(aes(y = CO2, color = "CO2"), size = 2) +
# geom_line(aes(y = CH4, color = "CH4"), size = 2) +
# geom_line(aes(y = N2O, color = "N2O"), size = 2) +
# scale_color_manual(values = c("blue", "green", "red"),
#                    labels = c("CH4", "CO2", "N2O"),
#                    name = "Gas Type") +
facet_grid(. ~ pathway, scales = "free_y",
labeller = labeller(pathway = c("CurrentTrends" = "Current Trend",
"NationalCommitments" = "National Commitments Pathway",
"GlobalSustainability" = "Global Sustainability Pathway"))) +
theme_minimal() +
theme(
text = element_text(family = "Courier New", color = "black", size = 12, face = "bold"),
legend.title = element_text(family = "Courier New", color = "steelblue", size = 12, face = "bold"),
legend.text = element_text(family = "Courier New", size = 12),
plot.title = element_text(color = "steelblue", size = 14, face = "bold"),
axis.title.x = element_text(color = "steelblue", size = 12),
axis.title.y = element_text(color = "steelblue", size = 12)
)
plot_list[[current_pathway]] <- p
# Save the plot as a JPEG file
jpeg(here("output", "figures", paste0(gsub("-", "", Sys.Date()), "_", "GHG_SDR_Report_clara.jpeg")),
units = "in", height = 5, width = 14, res = 300)
print(p)
dev.off()
}
p
# Libraries ---------------------------------------------------------------
library(here)
library(dplyr)
library(tidyr)
library(readr)
library(readxl)
library(conflicted)
library(readxl)
library(ggplot2)
library(hrbrthemes)
library(reshape2)
library(gridExtra)
conflict_prefer("filter", "dplyr")
here()
#Data extraction ---------------------------------------------------------------
scenathon<- read_csv(here("data", "20240319_extracted_indicator.csv")) %>%
rename(alpha3 = country, Year = year) %>%
mutate(pathway = recode(pathway, "NationalCommitment" = "NationalCommitments")) %>%
filter(iteration == "5") %>%
select(alpha3, pathway, Year, calccropn2o, calccropch4, calccropco2, calcliven2o, calclivech4,
ghgbiofuels,
calcdeforco2, calcotherlucco2,
calcsequestco3,
calcsequestaband, calcsequestaffor) %>%
group_by(Year, pathway) %>%
mutate(N2O_crop = sum(calccropn2o)) %>%
mutate(CH4_crop = sum(calccropch4)) %>%
mutate(CO2_crop = sum(calccropco2)) %>%
mutate(N2O_live = sum(calcliven2o)) %>%
mutate(CH4_live = sum(calclivech4)) %>%
mutate(CO2_def = sum(calcdeforco2)) %>%
mutate(CO2_other = sum(calcotherlucco2)) %>%
mutate(calcsequestco3 = as.numeric(calcsequestco3)) %>%
mutate(CO2_peat = sum(calcsequestco3, na.rm = TRUE)) %>%
mutate(CO2_aband = sum(calcsequestaband)) %>%
mutate(CO2_affor = sum(calcsequestaffor)) %>%
mutate(CO2_bio = sum(ghgbiofuels)) %>%
select(-alpha3, -calccropn2o, -calccropch4, -calccropco2, -calcliven2o, -calclivech4, -calcdeforco2, -calcotherlucco2, - ghgbiofuels,
-calcsequestco3,
-calcsequestaband, -calcsequestaffor) %>%
distinct()
#Data manipulation -------------------------------------------------------------
df_long <- melt(scenathon, id.vars = c("Year", "pathway"), variable.name = "Gas", value.name = "Emission")
df_long$Gas <- as.character(df_long$Gas)
df_long <- df_long %>%
mutate(Gas_type = case_when(
startsWith(Gas, "CO2") ~ "CO2",
startsWith(Gas, "CH4") ~ "CH4",
startsWith(Gas, "N2O") ~ "N2O",
TRUE ~ NA_character_
))
gas_colors <- c("N2O_crop" = "#F7C44E", "N2O_live" = "#B65356",
"CH4_crop" = "#F7C44E", "CH4_live" = "#B65356",
"CO2_crop" = "#F7C44E", "CO2_def" = "#0CA48D",
"CO2_other" ="#D5E59E","CO2_peat" = "#004D40",
"CO2_aband" = "#66BB6A",
"CO2_affor" = "#1B5E20",
"CO2_bio"= "grey"
)
gas_labels <- c(
#"N2O_crop" = "N2O from Crop", "N2O_live" = "N2O from Livestock",
#"CH4_crop" = "CH4 from Crop", "CH4_live" = "CH4 from Livestock",
"CO2_crop" = "Crop", "CH4_live" = "Livestock", "CO2_def" = "Deforestation", "CO2_other" ="Other Land Use",
"CO2_peat" = "Peatland",
"CO2_aband" = "Abandoned Agr. Land", "CO2_affor" = "Afforestation",
"CO2_bio" ="Savings from Biofuels")
df_long$Gas <- factor(df_long$Gas, levels = c(
"N2O_crop", "N2O_live",
"CH4_crop", "CH4_live",
"CO2_crop", "CO2_def",
"CO2_other", "CO2_peat",
"CO2_aband",
"CO2_affor",
"CO2_bio"
))
unique_pathways <- unique(df_long$pathway)
df_long$pathway <- factor(df_long$pathway, levels = c("CurrentTrends", "NationalCommitments", "GlobalSustainability"))
plot_list <- list()
for (current_pathway in unique_pathways) {
p <- ggplot(df_long, aes(x = Year, y = Emission, fill = Gas)) +
geom_area() +
labs(title = paste("AFOLU GHG emissions"), x = "Year", y = "MtCO2eq", fill = "") +
scale_fill_manual(values = gas_colors, labels = gas_labels, breaks = names(gas_labels)) +
scale_y_continuous(breaks = c(-2500, 0, 5000, 10000)) +
# geom_line(aes(y = CO2, color = "CO2"), size = 2) +
# geom_line(aes(y = CH4, color = "CH4"), size = 2) +
# geom_line(aes(y = N2O, color = "N2O"), size = 2) +
# scale_color_manual(values = c("blue", "green", "red"),
#                    labels = c("CH4", "CO2", "N2O"),
#                    name = "Gas Type") +
facet_grid(. ~ pathway, scales = "free_y",
labeller = labeller(pathway = c("CurrentTrends" = "Current Trend",
"NationalCommitments" = "National Commitments Pathway",
"GlobalSustainability" = "Global Sustainability Pathway"))) +
theme_minimal() +
theme(
text = element_text(family = "Courier New", color = "black", size = 12, face = "bold"),
legend.title = element_text(family = "Courier New", color = "steelblue", size = 12, face = "bold"),
legend.text = element_text(family = "Courier New", size = 12),
plot.title = element_text(color = "steelblue", size = 14, face = "bold"),
axis.title.x = element_text(color = "steelblue", size = 12),
axis.title.y = element_text(color = "steelblue", size = 12)
)
plot_list[[current_pathway]] <- p
# Save the plot as a JPEG file
jpeg(here("output", "figures", paste0(gsub("-", "", Sys.Date()), "_", "GHG_SDR_Report_clara.jpeg")),
units = "in", height = 5, width = 14, res = 300)
print(p)
dev.off()
}
p
## Scenario selection
# libraries ---------------------------------------------------------------
library(here)
#library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(ggplot2)
library(stringr)
library(conflicted)
library(writexl)
library(openxlsx)
conflicted::conflict_prefer("rename", "dplyr")
conflicted::conflict_prefer("mutate", "dplyr")
conflicted::conflict_prefer("summarise", "dplyr")
file <- list.files(path = here("data", "TradeAdjustedCalcs"))
# data --------------------------------------------------------------------
df <- read.csv(here("data", "FullDataBase.csv")) %>%
dplyr::filter(iteration == "4")
product <- read.csv(here("data",  "FullProductDataBase_old.csv"))  %>%
dplyr::filter(iteration == "4")
mapping_F6 <- read_excel(here("data",  "DataForFoodFigures.xlsx"),
sheet = "prod groups map")
db_scenarios <- read_excel(here("data", "scenarios2023.xlsx")) %>%
select(pathway, country, afforestation,agricultural_land_expansion)%>%
rename(ALPHA3 = country,
Pathway = pathway) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
unique()
fao_prod <- read.csv(here("data", "FAO_FoodBalance.csv"))
mapping <- read_excel(here("data",  "mapping_GAMS_FAO_products.xlsx"))
mapping[which(mapping$FAO == "Groundnuts (Shelled Eq)"), "FAO"] <- "Groundnuts"
mapping_country <- read_excel(here("data", "mapping_country_FAO_FABLE.xlsx")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Country_FAO, origin = "country.name", destination = "iso3c"))
mapping_ALPHA3 <- read_excel(here("data",  "mapping_alpha3_Country.xlsx")) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3))
fao_prod$Area <- as.character(fao_prod$Area)
fao_prod[which(fao_prod$Area == "United Kingdom of Great Britain and Northern Ireland"), "Area"] <- "United Kingdom"
product_dt <- left_join(product %>%
# rename(alpha3 = country) %>%
# mutate(alpha3 = as.character(alpha3)) %>%
select(#-id,
-iteration,
-scenathon_id),
df %>%
# rename(alpha3 = country) %>%
select(#-id,
-iteration,
-scenathon_id),
by = c("country", "pathway", "year")) %>%
rename(ALPHA3 = country) %>%
mutate(pathway = recode(pathway, "CurrentTrends" = "CurrentTrend")) %>%
left_join(mapping_ALPHA3) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
unique()
##Compute kcal/kg data from FAO 2020
df_fao <- fao_prod %>%
left_join(mapping %>% select(FPRODUCT, FAO) %>% unique(), by = c("Item" = "FAO")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Area, origin = "country.name", destination = "iso3c")) %>%
left_join(mapping_country, by = c("iso3c")) %>%
left_join(mapping_ALPHA3, by = c("Country_FABLE" = "Country")) %>%
select(ALPHA3, FPRODUCT, Element, Value)
df <- df %>%
rename(ALPHA3 = country) %>%
rename(Pathway = pathway)
product <- product %>%
rename(ALPHA3 = country)
#Computing Kcal content per Kg
df_fao <- (df_fao %>%
group_by(ALPHA3, FPRODUCT, Element) %>%
dplyr::summarise_at(vars(Value),
sum,
na.rm = T) %>%
pivot_wider(names_from = Element,
values_from = Value) %>%
dplyr::rename(kg = "Food supply quantity (kg/capita/yr)",
kcal = "Food supply (kcal/capita/day)") %>%
mutate(kcal.kg = ifelse(kg!=0,
kcal/kg,
NA)) %>%
data.frame())
product_df <- left_join(product_dt, df_fao, by = c("ALPHA3" = "ALPHA3", "product" = "FPRODUCT")) %>%
rename(Pathway = pathway)
View(df_fao)
df_change <- df %>%
slice(which(year %in% c(2020, 2050))) %>%
select(ALPHA3, Pathway, year, population, kcal_targ) %>%
unique() %>%
pivot_wider(names_from = year,
values_from = c(population, kcal_targ)) %>%
mutate(Population_change = round(population_2050/population_2020, 2)) %>%
mutate(kcal_targ_change = round(kcal_targ_2050/kcal_targ_2020,2)) %>%
select(ALPHA3, Pathway, Population_change, kcal_targ_change) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments")) %>%
data.frame()
#Computing imports and exports quantity relative changes 2020-2050, using Kcal per Kg to aggregate all products
product_tot <- product_df %>%
slice(which(year %in% c(2020, 2050))) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
mutate(Export_quantity = export_quantity * kcal.kg) %>%
mutate(Import_quantity = import_quantity * kcal.kg) %>%
group_by(ALPHA3, Pathway, year) %>%
dplyr::summarise(Export_quantity = sum(Export_quantity, na.rm = T),
Import_quantity = sum(Import_quantity, na.rm = T)) %>%
select(ALPHA3, Pathway, year,
Export_quantity, Import_quantity) %>%
pivot_wider(names_from = year,
values_from = c(Export_quantity, Import_quantity)) %>%
mutate(Export_quantity_change = round(Export_quantity_2050/Export_quantity_2020, 2)) %>%
mutate(Import_quantity_change = round(Import_quantity_2050/Import_quantity_2020, 2)) %>%
select(ALPHA3, Pathway, Export_quantity_change, Import_quantity_change) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
data.frame() %>%
## manually put lower for NPL because way too high and can't see the others
# mutate(Export_quantity_change = ifelse(ALPHA3 == "NPL", 4, Export_quantity_change)) %>%
# mutate(Import_quantity_change = ifelse(ALPHA3 == "ETH", 4, Import_quantity_change)) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments"))
View(product_tot)
View(df_change)
View(product_df)
View(product_df)
View(product)
file <- list.files(path = here("data", "TradeAdjustedCalcs"))
# data --------------------------------------------------------------------
df <- read.csv(here("data", "FullDataBase.csv")) %>%
dplyr::filter(iteration == "4")
product <- read.csv(here("data",  "FullProductDataBase_old.csv"))  %>%
dplyr::filter(iteration == "4")
mapping_F6 <- read_excel(here("data",  "DataForFoodFigures.xlsx"),
sheet = "prod groups map")
db_scenarios <- read_excel(here("data", "scenarios2023.xlsx")) %>%
select(pathway, country, afforestation,agricultural_land_expansion)%>%
rename(ALPHA3 = country,
Pathway = pathway) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
unique()
fao_prod <- read.csv(here("data", "FAO_FoodBalance.csv"))
View(fao_prod)
mapping <- read_excel(here("data",  "mapping_GAMS_FAO_products.xlsx"))
mapping[which(mapping$FAO == "Groundnuts (Shelled Eq)"), "FAO"] <- "Groundnuts"
mapping_country <- read_excel(here("data", "mapping_country_FAO_FABLE.xlsx")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Country_FAO, origin = "country.name", destination = "iso3c"))
mapping_ALPHA3 <- read_excel(here("data",  "mapping_alpha3_Country.xlsx")) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3))
fao_prod$Area <- as.character(fao_prod$Area)
fao_prod[which(fao_prod$Area == "United Kingdom of Great Britain and Northern Ireland"), "Area"] <- "United Kingdom"
product_dt <- left_join(product %>%
# rename(alpha3 = country) %>%
# mutate(alpha3 = as.character(alpha3)) %>%
select(#-id,
-iteration,
-scenathon_id),
df %>%
# rename(alpha3 = country) %>%
select(#-id,
-iteration,
-scenathon_id),
by = c("country", "pathway", "year")) %>%
rename(ALPHA3 = country) %>%
mutate(pathway = recode(pathway, "CurrentTrends" = "CurrentTrend")) %>%
left_join(mapping_ALPHA3) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
unique()
View(product_dt)
##Compute kcal/kg data from FAO 2020
df_fao <- fao_prod %>%
left_join(mapping %>% select(FPRODUCT, FAO) %>% unique(), by = c("Item" = "FAO")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Area, origin = "country.name", destination = "iso3c")) %>%
left_join(mapping_country, by = c("iso3c")) %>%
left_join(mapping_ALPHA3, by = c("Country_FABLE" = "Country")) %>%
select(ALPHA3, FPRODUCT, Element, Value)
df <- df %>%
rename(ALPHA3 = country) %>%
rename(Pathway = pathway)
product <- product %>%
rename(ALPHA3 = country)
#Computing Kcal content per Kg
df_fao <- (df_fao %>%
group_by(ALPHA3, FPRODUCT, Element) %>%
dplyr::summarise_at(vars(Value),
sum,
na.rm = T) %>%
pivot_wider(names_from = Element,
values_from = Value) %>%
dplyr::rename(kg = "Food supply quantity (kg/capita/yr)",
kcal = "Food supply (kcal/capita/day)") %>%
mutate(kcal.kg = ifelse(kg!=0,
kcal/kg,
NA)) %>%
data.frame())
View(df_fao)
fao_prod <- read.csv(here("data", "FAO_FoodBalance.csv"))
View(fao_prod)
## Scenario selection
# libraries ---------------------------------------------------------------
library(here)
#library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(ggplot2)
library(stringr)
library(conflicted)
library(writexl)
library(openxlsx)
conflicted::conflict_prefer("rename", "dplyr")
conflicted::conflict_prefer("mutate", "dplyr")
conflicted::conflict_prefer("summarise", "dplyr")
# file --------------------------------------------------------------------
file <- list.files(path = here("data", "TradeAdjustedCalcs"))
# data --------------------------------------------------------------------
df <- read.csv(here("data", "FullDataBase.csv")) %>%
dplyr::filter(iteration == "4")
product <- read.csv(here("data",  "FullProductDataBase_old.csv"))  %>%
dplyr::filter(iteration == "4")
mapping_F6 <- read_excel(here("data",  "DataForFoodFigures.xlsx"),
sheet = "prod groups map")
db_scenarios <- read_excel(here("data", "scenarios2023.xlsx")) %>%
select(pathway, country, afforestation,agricultural_land_expansion)%>%
rename(ALPHA3 = country,
Pathway = pathway) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
unique()
fao_prod <- read.csv(here("data", "FAO_FoodBalance.csv"))
mapping <- read_excel(here("data",  "mapping_GAMS_FAO_products.xlsx"))
mapping[which(mapping$FAO == "Groundnuts (Shelled Eq)"), "FAO"] <- "Groundnuts"
mapping_country <- read_excel(here("data", "mapping_country_FAO_FABLE.xlsx")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Country_FAO, origin = "country.name", destination = "iso3c"))
View(mapping_country)
View(mapping_country)
mapping_country <- read_excel(here("data", "mapping_country_FAO_FABLE.xlsx")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Country_FAO, origin = "country.name", destination = "iso3c"))
# libraries ---------------------------------------------------------------
library(here)
#library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(ggplot2)
library(stringr)
library(conflicted)
library(writexl)
library(openxlsx)
conflicted::conflict_prefer("rename", "dplyr")
conflicted::conflict_prefer("mutate", "dplyr")
conflicted::conflict_prefer("summarise", "dplyr")
# file --------------------------------------------------------------------
file <- list.files(path = here("data", "TradeAdjustedCalcs"))
# data --------------------------------------------------------------------
df <- read.csv(here("data", "FullDataBase.csv")) %>%
dplyr::filter(iteration == "4")
product <- read.csv(here("data",  "FullProductDataBase_old.csv"))  %>%
dplyr::filter(iteration == "4")
mapping_F6 <- read_excel(here("data",  "DataForFoodFigures.xlsx"),
sheet = "prod groups map")
db_scenarios <- read_excel(here("data", "scenarios2023.xlsx")) %>%
select(pathway, country, afforestation,agricultural_land_expansion)%>%
rename(ALPHA3 = country,
Pathway = pathway) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
unique()
fao_prod <- read.csv(here("data", "FAO_FoodBalance.csv"))
# mapping_animalprod <- read.csv(here("data", "FAOSTAT_mapping_animalprod.csv"))
# fao_prod <- fao_prod %>%
#   inner_join(mapping_animalprod, by = "Item")
mapping <- read_excel(here("data",  "mapping_GAMS_FAO_products.xlsx"))
mapping[which(mapping$FAO == "Groundnuts (Shelled Eq)"), "FAO"] <- "Groundnuts"
mapping_country <- read_excel(here("data", "mapping_country_FAO_FABLE.xlsx")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Country_FAO, origin = "country.name", destination = "iso3c"))
mapping_ALPHA3 <- read_excel(here("data",  "mapping_alpha3_Country.xlsx")) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3))
fao_prod$Area <- as.character(fao_prod$Area)
fao_prod[which(fao_prod$Area == "United Kingdom of Great Britain and Northern Ireland"), "Area"] <- "United Kingdom"
product_dt <- left_join(product %>%
# rename(alpha3 = country) %>%
# mutate(alpha3 = as.character(alpha3)) %>%
select(#-id,
-iteration,
-scenathon_id),
df %>%
# rename(alpha3 = country) %>%
select(#-id,
-iteration,
-scenathon_id),
by = c("country", "pathway", "year")) %>%
rename(ALPHA3 = country) %>%
mutate(pathway = recode(pathway, "CurrentTrends" = "CurrentTrend")) %>%
left_join(mapping_ALPHA3) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
unique()
##Compute kcal/kg data from FAO 2020
df_fao <- fao_prod %>%
left_join(mapping %>% select(FPRODUCT, FAO) %>% unique(), by = c("Item" = "FAO")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Area, origin = "country.name", destination = "iso3c")) %>%
left_join(mapping_country, by = c("iso3c")) %>%
left_join(mapping_ALPHA3, by = c("Country_FABLE" = "Country")) %>%
select(ALPHA3, FPRODUCT, Element, Value)
df <- df %>%
rename(ALPHA3 = country) %>%
rename(Pathway = pathway)
product <- product %>%
rename(ALPHA3 = country)
#Computing Kcal content per Kg
df_fao <- (df_fao %>%
group_by(ALPHA3, FPRODUCT, Element) %>%
dplyr::summarise_at(vars(Value),
sum,
na.rm = T) %>%
pivot_wider(names_from = Element,
values_from = Value) %>%
dplyr::rename(kg = "Food supply quantity (kg/capita/yr)",
kcal = "Food supply (kcal/capita/day)") %>%
mutate(kcal.kg = ifelse(kg!=0,
kcal/kg,
NA)) %>%
data.frame())
product_df <- left_join(product_dt, df_fao, by = c("ALPHA3" = "ALPHA3", "product" = "FPRODUCT")) %>%
rename(Pathway = pathway)
#####################
#Computing Population and Kcal target relative change 2020-2050
df_change <- df %>%
slice(which(year %in% c(2020, 2050))) %>%
select(ALPHA3, Pathway, year, population, kcal_targ) %>%
unique() %>%
pivot_wider(names_from = year,
values_from = c(population, kcal_targ)) %>%
mutate(Population_change = round(population_2050/population_2020, 2)) %>%
mutate(kcal_targ_change = round(kcal_targ_2050/kcal_targ_2020,2)) %>%
select(ALPHA3, Pathway, Population_change, kcal_targ_change) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments")) %>%
data.frame()
#Computing imports and exports quantity relative changes 2020-2050, using Kcal per Kg to aggregate all products
product_tot <- product_df %>%
slice(which(year %in% c(2020, 2050))) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
mutate(Export_quantity = export_quantity * kcal.kg) %>%
mutate(Import_quantity = import_quantity * kcal.kg) %>%
group_by(ALPHA3, Pathway, year) %>%
dplyr::summarise(Export_quantity = sum(Export_quantity, na.rm = T),
Import_quantity = sum(Import_quantity, na.rm = T)) %>%
select(ALPHA3, Pathway, year,
Export_quantity, Import_quantity) %>%
pivot_wider(names_from = year,
values_from = c(Export_quantity, Import_quantity)) %>%
mutate(Export_quantity_change = round(Export_quantity_2050/Export_quantity_2020, 2)) %>%
mutate(Import_quantity_change = round(Import_quantity_2050/Import_quantity_2020, 2)) %>%
select(ALPHA3, Pathway, Export_quantity_change, Import_quantity_change) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
data.frame() %>%
## manually put lower for NPL because way too high and can't see the others
# mutate(Export_quantity_change = ifelse(ALPHA3 == "NPL", 4, Export_quantity_change)) %>%
# mutate(Import_quantity_change = ifelse(ALPHA3 == "ETH", 4, Import_quantity_change)) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments"))
View(product_tot)
View(df_change)
View(df_change)
