#       slice(which(Year %in% c(2020, 2050))) %>%
#       rename_all(.funs = tolower) %>%
#       select(lcagg, year, paareatarget) %>%
#       mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                              str_sub(cur_file, 40, 42),
#                              ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                     str_sub(cur_file, 47, 49)))) %>%
#       mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "R_ASP",
#                              ifelse(ALPHA3 == "R_C", "R_CSA",
#                                     ifelse(ALPHA3 == "R_N", "R_NEU",
#                                            ifelse(ALPHA3 == "R_O", "R_OEU",
#                                                   ifelse(ALPHA3 == "R_S", "R_SSA",
#                                                          ifelse(ALPHA3 == "RME", "R_NMC", ALPHA3))))))) %>%
#       mutate(Pathway = ifelse(grepl("Current", cur_file),
#                               "CurrentTrend",
#                               ifelse(grepl("National", cur_file),
#                                      "NationalCommitments",
#                                      "GlobalSustainability"))) %>%
#       unique()
#   }
#   db_pa <- db_pa %>%
#     rbind.data.frame(data)
#   # %>%
#   #   mutate(ALPHA3 = gsub("_", "", ALPHA3))
#
# }
#
# write.xlsx(db_pa %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedPA.xlsx")), row.names = F)
### Manually added values for MEX and SWE
db_pa <- readxl::read_excel(here("data", "extracted_scenathon", "20240427_ExtractedPA.xlsx"))
db_change_pa <- db_pa %>%
mutate(paareatarget = as.numeric(paareatarget)) %>%
dplyr::filter(year==2050) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(Total_PA = sum(paareatarget, na.rm = TRUE)) %>%
ungroup() %>%
select(-lcagg, -paareatarget, -year) %>%
distinct() %>%
left_join(total_land, relationship = "many-to-many") %>%
mutate(pa = round(as.numeric(Total_PA) / as.numeric(totalland), 3)) %>%
select(-Total_PA, -totalland, -year ) %>%
unique()
# db_change_pa <- db_pa %>%
#   group_by(ALPHA3, Pathway) %>%
#   mutate(pa = round((as.numeric(Total_PA[year == "2050"]) - as.numeric(Total_PA[year == "2020"])) / as.numeric(Total_PA[year == "2020"]), digits = 2)) %>%
#   select(-year, -Total_PA) %>%
#   unique() %>%
#   mutate(pa = ifelse(pa > 2.5 , 2.5, pa))
#Extracting data from the Calculators - only run when needed
# db_irr <- data.frame()
#
# for (cur_file in file){
#   #???print(cur_file)
#   #???Extract the right sheet from calculators
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                      sheet = "3_calc_crops",
#                      range = "G28:AE798")
#   # if(grepl("SWE", cur_file)){
#   # data <- read_excel(here("data", "Calcs", cur_file),
#   #                      sheet = "2_calc_livestock",
#   #                      range = "BH31:BU75")
#   # }
#
#   data <- data %>%
#     slice(which(YEAR %in% c(2020, 2050))) %>%
#     select(YEAR, CROP, Harvarea, IrrHarvArea) %>%
#     mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                            str_sub(cur_file, 40, 42),
#                            ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                   str_sub(cur_file, 47, 49)))) %>%
#     mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "R_ASP",
#                            ifelse(ALPHA3 == "R_C", "R_CSA",
#                                   ifelse(ALPHA3 == "R_N", "R_NEU",
#                                          ifelse(ALPHA3 == "R_O", "R_OEU",
#                                                 ifelse(ALPHA3 == "R_S", "R_SSA",
#                                                        ifelse(ALPHA3 == "RME", "R_NMC", ALPHA3))))))) %>%
#     mutate(Pathway = ifelse(grepl("Current", cur_file),
#                             "CurrentTrend",
#                             ifelse(grepl("National", cur_file),
#                                    "NationalCommitments",
#                                    "GlobalSustainability"))) %>%
#     unique()
#
#   db_irr <- db_irr %>%
#     rbind.data.frame(data) %>%
#     data.frame()
# }
#
# write.xlsx(db_irr %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedIrr.xlsx")), row.names = F)
db_irr <- readxl::read_excel(here("data", "extracted_scenathon", "20240527_ExtractedIrr.xlsx")) %>%
dplyr::filter(year %in% c(2020,2050)) %>%
dplyr::filter(complete.cases(.)) # Eliminate rows with any NA values
harvarea_2020 <- db_irr %>%
filter(year == 2020) %>%
select(ALPHA3, Pathway, crop, harvarea_2020 = harvarea)
db_irr_with_harvarea_2020 <- db_irr %>%
left_join(harvarea_2020, by = c("ALPHA3", "Pathway", "crop"), relationship = "many-to-many") %>%
select(-harvarea) %>%
unique()
db_irr_agg <- db_irr_with_harvarea_2020 %>%
group_by(ALPHA3, Pathway, year) %>%
mutate(total_harvarea = sum(harvarea_2020, na.rm = TRUE)) %>%
mutate(crop_weight = harvarea_2020/total_harvarea) %>%
mutate(irr = shiftirrarea*crop_weight) %>%
mutate(irr_final = sum(irr)) %>%
ungroup() %>%
select(-crop, -harvarea_2020, -shiftirrarea,- total_harvarea, -crop_weight, -irr ) %>%
unique()
db_change_irr <- db_irr_agg %>%
mutate(var_pivot = paste0("irr_", year)) %>%
select(var_pivot, Pathway, ALPHA3, irr_final ) %>%
pivot_wider(names_from = var_pivot,
values_from = irr_final) %>%
mutate(irr_change = (irr_2050/irr_2020)) %>%
mutate(across(starts_with("irr_"), as.numeric)) %>%
select(ALPHA3, Pathway, irr_change) %>%
data.frame() %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "NMC", "R_NMC", ALPHA3)) %>%
mutate(irr_change = ifelse(ALPHA3 == "GRC", 0, irr_change)) %>%
mutate(irr_change = ifelse(ALPHA3 == "FIN" & Pathway == "NationalCommitments", 6, irr_change)) %>%
mutate(irr_change = ifelse(ALPHA3 == "FIN" & Pathway == "GlobalSustainability", 6, irr_change))
# db_agrprac <- data.frame()
#
# for (cur_file in file){
#   #???print(cur_file)
#   #???Extract the right sheet from calculators
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                      sheet = "3_calc_crops",
#                      range = "G28:AE798")
#   # if(grepl("SWE", cur_file)){
#   # data <- read_excel(here("data", "Calcs", cur_file),
#   #                      sheet = "2_calc_livestock",
#   #                      range = "BH31:BU75")
#   # }
#
#   data <- data %>%
#     slice(which(YEAR %in% c(2020, 2050))) %>%
#     select(YEAR, CROP, SPAMgroup, Harvarea, AreaAgroeco) %>%
#     mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                            str_sub(cur_file, 40, 42),
#                            ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                   str_sub(cur_file, 47, 49)))) %>%
#     mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "R_ASP",
#                            ifelse(ALPHA3 == "R_C", "R_CSA",
#                                   ifelse(ALPHA3 == "R_N", "R_NEU",
#                                          ifelse(ALPHA3 == "R_O", "R_OEU",
#                                                 ifelse(ALPHA3 == "R_S", "R_SSA",
#                                                        ifelse(ALPHA3 == "RME", "R_NMC", ALPHA3))))))) %>%
#     mutate(Pathway = ifelse(grepl("Current", cur_file),
#                             "CurrentTrend",
#                             ifelse(grepl("National", cur_file),
#                                    "NationalCommitments",
#                                    "GlobalSustainability"))) %>%
#     unique()
#
#   db_agrprac <- db_agrprac %>%
#     rbind.data.frame(data) %>%
#     data.frame()
# }
#
# write.xlsx(db_agrprac %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedAgrprac.xlsx")), row.names = F)
db_agrprac <- readxl::read_excel(here("data", "extracted_scenathon", "20240527_ExtractedAgrprac.xlsx")) %>%
dplyr::filter(year %in% c(2020,2050))
Harvarea_2020 <- db_agrprac %>%
filter(year == 2020) %>%
select(ALPHA3, Pathway, crop, harvarea_2020 = harvarea)
db_agrprac_with_Harvarea_2020 <- db_agrprac %>%
left_join(Harvarea_2020, by = c("ALPHA3", "Pathway", "crop"), relationship = "many-to-many") %>%
select(-harvarea) %>%
unique()
db_agrprac_agg <- db_agrprac_with_Harvarea_2020 %>%
group_by(ALPHA3, Pathway, year) %>%
mutate(total_harvarea = sum(harvarea_2020, na.rm = TRUE)) %>%
mutate(crop_weight = harvarea_2020/total_harvarea) %>%
mutate(agroec = shagroeco*crop_weight) %>%
mutate(agroec_final = sum(agroec, na.rm = TRUE)) %>%
ungroup() %>%
select(-crop, -harvarea_2020, -shagroeco,- total_harvarea, -crop_weight, -agroec, -areaagroeco, -spamgroup) %>%
unique()
db_change_agrprac <- db_agrprac_agg %>%
mutate(var_pivot = paste0("agrprac_", year)) %>%
select(var_pivot, Pathway, ALPHA3, agroec_final ) %>%
pivot_wider(names_from = var_pivot,
values_from = agroec_final) %>%
mutate(agrprac_change= (agrprac_2050/agrprac_2020)) %>%
mutate(across(starts_with("agrprac_"), as.numeric)) %>%
select(ALPHA3, Pathway, agrprac_change) %>%
data.frame() %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "NMC", "R_NMC", ALPHA3))
############# OLD METHOD ##############
# db_agrprac <- readxl::read_excel(here("data", "extracted_scenathon", "20240523_ExtractedAgrprac.xlsx")) %>%
#   dplyr::filter(YEAR %in% c(2020,2050))
#
# db_agrprac_agg <- db_agrprac %>%
#   group_by(ALPHA3, Pathway, YEAR) %>%
#   mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
#   mutate(total_agrprac = sum(AreaAgroeco, na.rm = TRUE)) %>%
#   mutate(share_agrprac = total_agrprac/total_harvarea) %>%
#   ungroup() %>%
#   select(-CROP, -SPAMgroup, -Harvarea, -AreaAgroeco, -total_harvarea, -total_agrprac ) %>%
#   unique()
#
#
# db_change_agrprac <- db_agrprac_agg %>%
#   mutate(var_pivot = paste0("agrprac_", YEAR)) %>%
#   select(var_pivot, Pathway, ALPHA3, share_agrprac ) %>%
#   pivot_wider(names_from = var_pivot,
#               values_from = share_agrprac) %>%
#   mutate(agrprac_change= (agrprac_2050-agrprac_2020)) %>%
#   mutate(across(starts_with("agrprac_"), as.numeric)) %>%
#   select(ALPHA3, Pathway, agrprac_change) %>%
#   data.frame() %>%
#   mutate(ALPHA3 = ifelse(ALPHA3 == "NMC", "R_NMC", ALPHA3))
# data final --------------------------------------------------------------
data_final <- df_change %>%
left_join(db_change_crop) %>%
left_join(db_change_Live_Prod) %>%
left_join(db_change_RumDensity) %>%
left_join(product_tot) %>%
left_join(db_change_Expansion) %>%
left_join(db_change_afforestation) %>%
left_join(db_change_foodwaste) %>%
left_join(db_change_pa) %>%
left_join(db_change_irr) %>%
left_join(db_change_agrprac) %>%
dplyr::filter(ALPHA3 != "WORLD")
# %>%
# mutate(ALPHA3 = ifelse(ALPHA3 == "RMECAS", "NMC", ALPHA3))
# %>%
#   mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 5, str_sub(ALPHA3, 3, 5), ALPHA3))
data_final_FABLE <- data_final %>%
#slice(which(!(ALPHA3 %in% c("ASP", "NEU", "NMC", "ROEU", "SSA", "CSA")))) %>%
data.frame()
#
#
#
#
#
# # Select variables for normalization
# selected_vars <- c("Population_change", "kcal_targ_change", "pdty_crop_change", "pdty_live_change",
#                    "density_change", "Expansion_change", "Export_quantity_change", "Import_quantity_change",
#                    "Foodwaste_change"
#                    # , "Affor", "pa"
#                    )
#
# data_final_FABLE_k <- data_final_FABLE %>%
#   group_by(ALPHA3) %>%
#   mutate(across(all_of(selected_vars), ~ mean(., na.rm = TRUE))) %>%
#   ungroup()
#
# # Normalize variables
# normalized_data <- scale(data_final_FABLE_k[selected_vars])
#
# # Replace missing values with the mean of each variable
# normalized_data <- na.aggregate(normalized_data, FUN = mean)
#
# #Veryfying which is the best number of cluster
# # fviz_nbclust(normalized_data, kmeans, method = "wss")
# # fviz_nbclust(normalized_data, kmeans, method = "silhouette")
#
#
#
# # number of clusters
# k <- 5
#
# set.seed(234)
#
# # Perform k-means clustering
# cluster_results <- kmeans(normalized_data, centers = k)
# fviz_cluster(cluster_results, data = normalized_data)
# Compute cluster centers
# cluster_centers <- cluster_results$centers
# # Calculate variability of each variable across clusters
# variability <- apply(cluster_centers, 2, sd)
#
# # Rank variables by variability
# variable_importance <- sort(variability, decreasing = TRUE)
#
# # Print variable importance
# print(variable_importance)
# Add cluster labels to the original data
# data_final_FABLE_k$cluster <- cluster_results$cluster
#
#
# ggplot(data_final_FABLE_k, aes(x = cluster, y =ALPHA3 )) +
#   geom_point() +
#   labs(title = "Cluster - Country CT")
# #Without taking into consideratio the weight of each country
# cluster_summary <- data_final_FABLE_k %>%
#
#
# clusters <- data_final_FABLE_k %>%
#   select(ALPHA3, cluster) %>%
#   unique()
#
#
# data_final_FABLE <- data_final_FABLE %>%
#   left_join(clusters, by="ALPHA3") %>%
#   group_by(cluster, Pathway) %>%
#   mutate(across(all_of(selected_vars), mean, na.rm = TRUE)) %>%
#   ungroup() %>%
#   select(-cluster)
#
# #
# #BOX PLOTS
# data_final_FABLE_box <- data_final_FABLE %>%
#   left_join(clusters, by="ALPHA3") %>%
#   select(-Pathway, -ALPHA3)
#
# # Define the variables of interest
# variables <- c("Population_change", "kcal_targ_change", "pdty_crop_change", "pdty_live_change",
#                "density_change", "Expansion_change", "Export_quantity_change", "Import_quantity_change",
#                "Foodwaste_change")
#
# # Reshape the data from wide to long format
# data_long <- tidyr::pivot_longer(data_final_FABLE_box, cols = variables, names_to = "variable", values_to = "value")
#
# # Create boxplots for each variable, faceted by cluster
# ggplot(data_long, aes(x = factor(cluster), y = value)) +
#   geom_boxplot() +
#   facet_wrap(~variable, scales = "free_y", ncol = 3) +
#   labs(title = "Boxplots of variables by clluster") +
#   theme_minimal()
#
melted <- melt(data_final_FABLE, id.vars = c("ALPHA3", "Pathway", "afforestation", "agricultural_land_expansion"))
melted$value <- ifelse(melted$variable == "pa", melted$value,
ifelse(melted$variable == "Foodwaste_change", melted$value,
ifelse(
melted$value!= "NaN" & melted$variable != "Affor",
melted$value-1,
ifelse(melted$variable == "Affor",
melted$value,
NA))))
melted$sign <- ifelse(melted$value < 0,
0,
1)
complete_data <- melted %>%
select(-afforestation, -agricultural_land_expansion)
### All info in one graph
var.labs <- c(
Population_change = "Population",
kcal_targ_change = "Calories \nper capita",
pdty_crop_change = "Crops \nproductivity",
pdty_live_change = "Livestock \nproductivity",
density_change = "Ruminant \ndensity ",
Expansion_change ="Agricultural \nexpansion \n(i)",
Export_quantity_change = "Exports \n(kcal)",
Import_quantity_change = "Imports \n(kcal)",
Foodwaste_change = "Share of \n food waste \n(iii)",
Affor = "Afforestation \n(Mha) \n(ii)",
pa= "Protected \n areas \n(iv)",
irr_change= "Irrigated \nareas",
agrprac_change= "Area under \nagroecological \npractices"
)
complete_data$Pathway <- factor(as.character(complete_data$Pathway), levels = c("GlobalSustainability", "NationalCommitments", "CurrentTrend"))
complete_data <- complete_data %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "GBR",
"UK",
ALPHA3))
data_SOFA <- complete_data
data_SOFA <- data_SOFA %>%
mutate(Pathway = if_else(ALPHA3 == "IND" & Pathway == "NationalCommitments", NA_character_, Pathway),
Pathway = if_else(ALPHA3 == "IND" & Pathway == "GlobalSustainability", "FSDP", Pathway))
data_SOFA <- data_SOFA %>% drop_na(Pathway)
data_SOFA <- data_SOFA %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Population_change", 0.182, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "kcal_targ_change", 0.564, value)) %>%
mutate(sign = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "pdty_crop_change", 1, sign)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "pdty_crop_change", 0.625, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "pdty_live_change", 0.0, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "density_change", 0.0, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Export_quantity_change", 0.0, value)) %>%
mutate(sign = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Import_quantity_change", 1, sign)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "food_waste", 0.404, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "pa", 0.01, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Expansion_change", -0.5, value)) %>%
mutate(sign = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Expansion_change", 0, sign)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "irr_change", 0.16, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "share_agrprac_final", 0.0, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Import_quantity_change", 02.065, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Affor", 28.5375, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Population_change", 0.15, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "kcal_targ_change", -0.26, value)) %>%
mutate(sign = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "kcal_targ_change", 0, sign)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "pdty_crop_change", 0.331, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "food_waste", 0.021, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "pdty_live_change", 0.0, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "density_change", 0.0, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Export_quantity_change", 0.0, value)) %>%
mutate(sign = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Import_quantity_change", 1, sign)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Import_quantity_change", 1.778, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "pa", 0.1 , value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Expansion_change", -0.5, value)) %>%
mutate(sign = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Expansion_change", 0, sign)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Affor", 28.5373, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "irr_change", 0.2, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "share_agrprac_final", 0.0, value))
# Define the order of Pathway levels
pathway_order <- c("CurrentTrend", "NationalCommitments", "GlobalSustainability", "FSDP")
data_SOFA <- data_SOFA %>%
filter(ALPHA3 %in% c("AUS", "BRA", "COL", "ETH", "IND", "UK"))
p_final_SOFA <-  ggplot(data_SOFA, aes(y = value, x = reorder(Pathway, -as.numeric(factor(Pathway, levels = pathway_order))), group = ALPHA3, fill = sign)) +
geom_col(position = "dodge", show.legend = FALSE)+
ylab("Relative change between 2020 and 2050 (2020=0)")+
coord_flip()+
scale_x_discrete(labels = c(GlobalSustainability = "GS",
NationalCommitments = "NC",
CurrentTrend = "CT",
FSDP ="FSDP"))+
scale_y_continuous(n.breaks = 3)+
geom_hline(yintercept = 0, linetype = "dashed")+
facet_grid(ALPHA3~variable,
switch = "y",
labeller = labeller(variable = var.labs),
drop = T,
space = "fixed",
scale = "free")+
#theme_light()+
theme(
panel.background = element_rect(fill = '#F2F2F2'),
panel.grid  = element_blank(),
strip.placement = "outside",
#axis.title.x = element_text("2050 compared to 2015 (2015=1)"),
# axis.text.x = element_blank(),
# axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.background=element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.spacing.x = unit(0.75, "lines"),
strip.text.y.left = element_text(angle = 0),
axis.text = element_text(size = 13),
axis.title.x = element_text(size = 15),
axis.line.x = element_line())
# labs(caption = "Note: Relative changes can come both from country team’s scenario assumptions and combined effect of multiple changes in the Calculator.
# (i) 'Agricultural Expansion' is expressed in code, taking the value 1 for 'Free expansion scenario', -1 for 'No deforestation' and -2 for 'No Agricultural expansion'.
# (ii) 'Afforestation (1000 ha)': results are expressed in net increase rather than relative change.
# (iii) 'Food Waste': results are expressed % of consumption which is wasted.
# (iv) 'Protected Areas': results are expressed in % of total land in 2050.
# (v) 'Irrigation area' and (vi)'Agrocological Practises': results are expressed in % of harvest area in 2050.
#      \n India scenarios are based on MagPIE;
#      No information about 'Livestock Productivity' and 'Ruminand Density' scenarios.
#      There are only two pathways: the BAU/Current Trend pathway and the FSDP/Global Sustainability pathway.
#      Exports/Imports units are Mt DM/yr and Crop Productivity unit is Metric tonnes dry matter per hectare. The other scenarios have the same units as the other countries."
# )
pdf(here("output", "figures", paste0(gsub("-", "", format(Sys.Date(), format = "%y%m%d")), "_", "ScenarioAssumptionSOFA.pdf")),
height = 10, width = 24)
plot(p_final_SOFA)
dev.off()
data_SOFA <- data_SOFA %>%
filter(ALPHA3 %in% c("ETH"))
p_final_SOFA <-  ggplot(data_SOFA, aes(y = value, x = reorder(Pathway, -as.numeric(factor(Pathway, levels = pathway_order))), group = ALPHA3, fill = sign)) +
geom_col(position = "dodge", show.legend = FALSE)+
ylab("Relative change between 2020 and 2050 (2020=0)")+
coord_flip()+
scale_x_discrete(labels = c(GlobalSustainability = "GS",
NationalCommitments = "NC",
CurrentTrend = "CT",
FSDP ="FSDP"))+
scale_y_continuous(n.breaks = 3)+
geom_hline(yintercept = 0, linetype = "dashed")+
facet_grid(ALPHA3~variable,
switch = "y",
labeller = labeller(variable = var.labs),
drop = T,
space = "fixed",
scale = "free")+
#theme_light()+
theme(
panel.background = element_rect(fill = '#F2F2F2'),
panel.grid  = element_blank(),
strip.placement = "outside",
#axis.title.x = element_text("2050 compared to 2015 (2015=1)"),
# axis.text.x = element_blank(),
# axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.background=element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.spacing.x = unit(0.75, "lines"),
strip.text.y.left = element_text(angle = 0),
axis.text = element_text(size = 13),
axis.title.x = element_text(size = 15),
axis.line.x = element_line())
# labs(caption = "Note: Relative changes can come both from country team’s scenario assumptions and combined effect of multiple changes in the Calculator.
# (i) 'Agricultural Expansion' is expressed in code, taking the value 1 for 'Free expansion scenario', -1 for 'No deforestation' and -2 for 'No Agricultural expansion'.
# (ii) 'Afforestation (1000 ha)': results are expressed in net increase rather than relative change.
# (iii) 'Food Waste': results are expressed % of consumption which is wasted.
# (iv) 'Protected Areas': results are expressed in % of total land in 2050.
# (v) 'Irrigation area' and (vi)'Agrocological Practises': results are expressed in % of harvest area in 2050.
#      \n India scenarios are based on MagPIE;
#      No information about 'Livestock Productivity' and 'Ruminand Density' scenarios.
#      There are only two pathways: the BAU/Current Trend pathway and the FSDP/Global Sustainability pathway.
#      Exports/Imports units are Mt DM/yr and Crop Productivity unit is Metric tonnes dry matter per hectare. The other scenarios have the same units as the other countries."
# )
width = 14
height = 14
print(p_final_SOFA)
pdf(here("output", "figures", paste0(gsub("-", "", format(Sys.Date(), format = "%y%m%d")), "_", "ScenarioAssumptionSOFA.pdf")),
height = 4, width = 22)
pdf(here("output", "figures", paste0(gsub("-", "", format(Sys.Date(), format = "%y%m%d")), "_", "ScenarioAssumptionSOFA.pdf")),
height = 4, width = 22)
plot(p_final_SOFA)
dev.off()
pdf(here("output", "figures", paste0(gsub("-", "", format(Sys.Date(), format = "%y%m%d")), "_", "ScenarioAssumptionSOFA.pdf")),
height = 4, width = 24)
plot(p_final_SOFA)
dev.off()
