mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT=fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
#Reading extracted data
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240229_ExtractedFoodWaste.xlsx"))
db_full_waste <- db_full_waste %>%
mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT=fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE)) %>%
mutate(weight =  100 * kcal / total_kcal) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, FPRODUCT) %>%
mutate(food_waste_weighted = food_waste * weight)
#Reading extracted data
db_full_affor <- readxl::read_excel(here("data", "extracted", "20240311_ExtractedAfforestation.xlsx"))
View(db_change_afforestation)
View(db_full_affor)
#Reading extracted data
db_full_affor <- readxl::read_excel(here("data", "extracted", "20240311_ExtractedAfforestation.xlsx"))
View(db_full_affor)
#Extract the afforestation target
db_full_afforestation_agg <- db_scenarios %>%
unique() %>%
left_join(db_full_affor %>%
rename(Year = year, afforestation = afforscen)) %>%
mutate(Year = as.numeric(Year)) %>%
mutate(NewForest = as.numeric(newforest)) %>%
select(ALPHA3, Pathway, Year, NewForest)
#Computing afforestation absolute difference 2020 - 2050 in Million ha (Mha)
db_change_afforestation <- db_full_afforestation_agg %>%
mutate(var_pivot = paste0("affor_", Year)) %>%
select(var_pivot, Pathway, ALPHA3, NewForest) %>%
dplyr::filter(!is.na(NewForest)) %>%
pivot_wider(names_from = var_pivot,
values_from = c(NewForest)) %>%
mutate(Affor = round((affor_2050-affor_2020)/1000, 2)) %>%
select(ALPHA3, Pathway, Affor) %>%
data.frame()
# Food Waste --------------------------------------------------------
#Extracting data from the Calculators - only run when needed
db_full_waste <- data.frame()
#Reading extracted data
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240229_ExtractedFoodWaste.xlsx"))
#Reading extracted data
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240311_ExtractedFoodWaste.xlsx"))
db_full_waste <- db_full_waste %>%
mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT=fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
View(db_full_waste)
#Reading extracted data
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240311_ExtractedFoodWaste.xlsx"))
db_full_waste <- db_full_waste %>%
mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE)) %>%
mutate(weight =  100 * kcal / total_kcal) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, FPRODUCT) %>%
mutate(food_waste_weighted = food_waste * weight)
#Computing share of food waste relative change 2020 - 2050
db_change_foodwaste <- db_change_foodwaste %>%
select(year, ALPHA3, Pathway, FPRODUCT, food_waste_weighted) %>%
pivot_wider(names_from = year, names_glue = "Foodwaste_{year}", values_from = food_waste_weighted) %>%
mutate(Foodwaste_change = Foodwaste_2050 / Foodwaste_2020) %>%
group_by(ALPHA3, Pathway) %>%
mutate(Foodwaste_change = mean(Foodwaste_change, na.rm = TRUE)) %>%
select(-FPRODUCT, -Foodwaste_2020, -Foodwaste_2050) %>%
ungroup() %>%
distinct()
View(db_change_foodwaste)
# Extracting data from the Calculators - only run when needed
db_full <- data.frame()
for (cur_file in file_SOFA){
#extract the righ sheet in Calculator
data <- read_excel(here("data", "TradeAdjustedCalcs", cur_file),
sheet = "2_calc_livestock",
range = "A30:Z173")
data <- data %>%
slice(which(herdcount == 1)) %>%
slice(which(YEAR %in% c(2020, 2050))) %>%
select(YEAR, ANIMAL, FPRODUCT, herd, pdtyanim) %>%
#get right name for regions
# mutate(ALPHA3 = str_sub(cur_file, 30, 50)) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file),
"AUS",
ifelse(grepl("BRA", cur_file),
"BRA",
ifelse(grepl("COL",cur_file),
"COL",
ifelse(grepl("ETH", cur_file),
"ETH",
ifelse(grepl("GBR", cur_file),
"GBR",
"IND")))))) %>%
mutate(Pathway = ifelse(grepl("Current", cur_file),
"CurrentTrend",
ifelse(grepl("National", cur_file),
"NationalCommitments",
"GlobalSustainability")))
db_full <- db_full %>%
rbind.data.frame(data)
}
write.xlsx(db_full %>% data.frame(), file = here("data", "extracted", paste0(gsub("-", "",Sys.Date()), "_ExtractedPdtyLivestock.xlsx")), row.names = F)
#Reading extracted data
db_full <- readxl::read_excel(here("data", "extracted", "20240311_ExtractedPdtyLivestock.xlsx"))
#Computing Livestock productivity in t/TLU
db_full_agg <- db_full %>%
# use the herd in TLU to later compute a weighted average
mutate(weight_pdty = herd*pdtyanim) %>%
group_by(ALPHA3, Pathway, YEAR) %>%
dplyr::summarise(weight_pdty = sum(weight_pdty, na.rm = T),
herd = sum(herd, na.rm = T)) %>%
#weighted average
mutate(pdty = weight_pdty/herd)
db_change_Live_Prod <- db_full_agg %>%
mutate(var_pivot = paste0("pdty_", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, pdty) %>%
pivot_wider(names_from = var_pivot,
values_from = c(pdty)) %>%
#relative change between 2050 and 2020
mutate(pdty_live_change = round(pdty_2050/pdty_2020, 2)) %>%
select(ALPHA3, Pathway, pdty_live_change)
db_full2 <- data.frame()
for (cur_file in file_SOFA){
data <- read_excel(here("data", "TradeAdjustedCalcs", cur_file),
sheet = "2_calc_livestock",
range = "BH30:BV74")
data <- data %>%
slice(which(YEAR %in% c(2020, 2050))) %>%
select(YEAR, ANIMAL, Pasture, RumDensity) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file),
"AUS",
ifelse(grepl("BRA", cur_file),
"BRA",
ifelse(grepl("COL",cur_file),
"COL",
ifelse(grepl("ETH", cur_file),
"ETH",
ifelse(grepl("GBR", cur_file),
"GBR",
"IND")))))) %>%
mutate(Pathway = ifelse(grepl("Current", cur_file),
"CurrentTrend",
ifelse(grepl("National", cur_file),
"NationalCommitments",
"GlobalSustainability"))) %>%
unique()
db_full2 <- db_full2 %>%
rbind.data.frame(data)
}
write.xlsx(db_full2 %>% data.frame(), file = here("data", "extracted", paste0(gsub("-", "",Sys.Date()), "_ExtractedRumDensity.xlsx")), row.names = F)
#Reading extracted data
db_full2 <- readxl::read_excel(here("data", "extracted", "20240311_ExtractedRumDensity.xlsx"))
#Computing Ruminant density in TLU/ha
db_full2_agg <- db_full2 %>%
# use the pasture surface in ha to later compute a weighted average
mutate(weight_dens = Pasture*RumDensity) %>%
group_by(ALPHA3, Pathway, YEAR) %>%
dplyr::summarise(weight_dens = sum(weight_dens, na.rm = T),
Pasture = sum(Pasture, na.rm = T)) %>%
#weighted average
mutate(density = weight_dens/Pasture)
#Computing Ruminant density relative change 2020 - 2050
db_change_RumDensity <- db_full2_agg %>%
mutate(var_pivot = paste0("density_", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, density) %>%
pivot_wider(names_from = var_pivot,
values_from = c(density)) %>%
#relative change between 2050 and 2015
mutate(density_change = round(density_2050/density_2020, 2)) %>%
select(ALPHA3, Pathway, density_change)
# #Extracting data from the Calculators - only run when needed
db_full_crop <- data.frame()
for (cur_file in file_SOFA){
#???Extract the right sheet from calculators
data <- read_excel(here("data", "TradeAdjustedCalcs", cur_file),
sheet = "3_calc_crops",
range = "G28:AE798")
data <- data %>%
slice(which(YEAR %in% c(2020, 2050))) %>%
select(YEAR, CROP, Harvarea, Pdty) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file),
"AUS",
ifelse(grepl("BRA", cur_file),
"BRA",
ifelse(grepl("COL",cur_file),
"COL",
ifelse(grepl("ETH", cur_file),
"ETH",
ifelse(grepl("GBR", cur_file),
"GBR",
"IND")))))) %>%
mutate(Pathway = ifelse(grepl("Current", cur_file),
"CurrentTrend",
ifelse(grepl("National", cur_file),
"NationalCommitments",
"GlobalSustainability"))) %>%
unique()
db_full_crop <- db_full_crop %>%
rbind.data.frame(data) %>%
data.frame()
}
write.xlsx(db_full_crop %>% data.frame(), file = here("data", "extracted", paste0(gsub("-", "",Sys.Date()), "_ExtractedPdtyCrop.xlsx")), row.names = F)
#Reading extracted data
db_full_crop <- readxl::read_excel(here("data", "extracted", "20240229_ExtractedPdtyCrop.xlsx"))
#Computing Crop productivity in t/ha using the harvested area to aggregate
db_full_crop_agg <- db_full_crop %>%
#Use harvested area as weight
mutate(weight_pdty = Harvarea*Pdty) %>%
group_by(ALPHA3, Pathway, YEAR) %>%
dplyr::summarise(weight_pdty = sum(weight_pdty, na.rm = T),
Harvarea = sum(Harvarea, na.rm = T)) %>%
#weighted average
mutate(pdty = weight_pdty/Harvarea)
#Computing Crop productivity relative change 2020 - -2050
db_change_crop <- db_full_crop_agg %>%
mutate(var_pivot = paste0("pdty_", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, pdty) %>%
pivot_wider(names_from = var_pivot,
values_from = c(pdty)) %>%
#relative change between 2050 and 2015
mutate(pdty_crop_change = round(pdty_2050/pdty_2020, 2)) %>%
select(ALPHA3, Pathway, pdty_crop_change) %>%
data.frame()
#Reading extracted data
db_full_expansion <- readxl::read_excel(here("data", "extracted", "20240229_ExtractedExpansion.xlsx"))
#Productive land expansion constraint in Million ha
db_change_Expansion <- db_scenarios %>%
left_join(db_full_expansion) %>%
select(-MaxExpansion) %>%
mutate(Expansion_change = as.numeric(ifelse(agricultural_land_expansion == "FreeExpansion", 2,
ifelse(agricultural_land_expansion == "NoDefor", 0,
ifelse(agricultural_land_expansion == "NoDefor2030", 0, -1))))) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments"))
#Extracting data from the Calculators - only run when needed
db_full_affor <- data.frame()
for (cur_file in file_SOFA){
##print(cur_file)
#???Extract the right sheet from calculators
data <- read_excel(here("data", "TradeAdjustedCalcs", cur_file),
sheet = "SCENARIOS definition",
range = "A1:JY1272")
index <- which(data == "TABLE: AfforScenDef", arr.ind = T)
if(plyr::empty(index)){index <- which(data == "Table: AfforScenDef", arr.ind = T)}
print(index)
if(!plyr::empty(index)){#Don't know if the table is in the calculator; we check before digging in
#if it is in the calc than we only want a certain amount of columns after "Biofuel_scen" cell
data <- data[c(index[1,1]:nrow(data))+ifelse(grepl("CAN", cur_file), 8, 9),
c(index[1,2]:(index[1,2]+6))]
colnames(data) <- data[1,]
data <- data[-1,]
data <- data.frame(data[rowSums(is.na(data)) != ncol(data), ])
data <- data %>%
slice(which(Year %in% c(2020, 2050))) %>%
rename_all(.funs = tolower) %>%
select(year, newforest, afforscen) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file),
"AUS",
ifelse(grepl("BRA", cur_file),
"BRA",
ifelse(grepl("COL",cur_file),
"COL",
ifelse(grepl("ETH", cur_file),
"ETH",
ifelse(grepl("GBR", cur_file),
"GBR",
"IND")))))) %>%
mutate(Pathway = ifelse(grepl("Current", cur_file),
"CurrentTrend",
ifelse(grepl("National", cur_file),
"NationalCommitments",
"GlobalSustainability"))) %>%
unique()
}
db_full_affor <- db_full_affor %>%
rbind.data.frame(data)%>%
mutate(ALPHA3 = gsub("_", "", ALPHA3))
}
# Protected Areas -----------------------------------------------------------
#Extracting data from the Calculators - only run when needed
db_pa <- data.frame()
for (cur_file in file_SOFA){
data <- read_excel(here("data", "TradeAdjustedCalcs", cur_file),
sheet = "SCENARIOS definition",
range = "A1:OK500")
index <- which(data == "TABLE: Patarget_def", arr.ind = T)
if(plyr::empty(index)){index <- which(data == "TABLE: Patarget_def", arr.ind = T)}
print(index)
if(!plyr::empty(index)){
data <- data[c(index[1,1]:nrow(data))+ +ifelse(grepl("ETH", cur_file), 8, 9),
c(index[1,2]:(index[1,2]+6))]
colnames(data) <- data[1,]
data <- data[-1,]
data <- data.frame(data[rowSums(is.na(data)) != ncol(data), ])
data <- data %>%
slice(which(Year %in% c(2020, 2050))) %>%
# rename_with(~ if ("PAareaTarget" %in% names(.)) "PAareatarget" else ., starts_with("PA")) %>%
select(LCAgg, Year, PAareatarget) %>%
# mutate(ALPHA3 = str_sub(cur_file, 15, 17)) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file),
"AUS",
ifelse(grepl("BRA", cur_file),
"BRA",
ifelse(grepl("COL",cur_file),
"COL",
ifelse(grepl("ETH", cur_file),
"ETH",
ifelse(grepl("GBR", cur_file),
"GBR",
"IND")))))) %>%
mutate(Pathway = ifelse(grepl("Current", cur_file),
"CurrentTrend",
ifelse(grepl("National", cur_file),
"NationalCommitments",
"GlobalSustainability"))) %>%
unique()
}
db_pa <- db_pa %>%
rbind.data.frame(data)%>%
mutate(ALPHA3 = gsub("_", "", ALPHA3))
}
# Protected Areas -----------------------------------------------------------
#Extracting data from the Calculators - only run when needed
db_pa <- data.frame()
for (cur_file in file_SOFA){
data <- read_excel(here("data", "TradeAdjustedCalcs", cur_file),
sheet = "SCENARIOS definition",
range = "A1:OK500")
index <- which(data == "TABLE: Patarget_def" | data == "TABLE: PAtarget_def", arr.ind = TRUE)
if (plyr::empty(index)) {
# If the first attempt didn't find the index, try the second variation
index <- which(data == "TABLE: PAtarget_def", arr.ind = TRUE)
}
if(!plyr::empty(index)){
data <- data[c(index[1,1]:nrow(data))+ +ifelse(grepl("ETH", cur_file), 8, 9),
c(index[1,2]:(index[1,2]+6))]
colnames(data) <- data[1,]
data <- data[-1,]
data <- data.frame(data[rowSums(is.na(data)) != ncol(data), ])
data <- data %>%
slice(which(Year %in% c(2020, 2050))) %>%
rename_with(~ if ("PAareaTarget" %in% names(.)) "PAareatarget" else ., starts_with("PA")) %>%
select(LCAgg, Year, PAareatarget) %>%
# mutate(ALPHA3 = str_sub(cur_file, 15, 17)) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file),
"AUS",
ifelse(grepl("BRA", cur_file),
"BRA",
ifelse(grepl("COL",cur_file),
"COL",
ifelse(grepl("ETH", cur_file),
"ETH",
ifelse(grepl("GBR", cur_file),
"GBR",
"IND")))))) %>%
mutate(Pathway = ifelse(grepl("Current", cur_file),
"CurrentTrend",
ifelse(grepl("National", cur_file),
"NationalCommitments",
"GlobalSustainability"))) %>%
unique()
}
db_pa <- db_pa %>%
rbind.data.frame(data)%>%
mutate(ALPHA3 = gsub("_", "", ALPHA3))
}
# Protected Areas -----------------------------------------------------------
#Extracting data from the Calculators - only run when needed
db_pa <- data.frame()
for (cur_file in file_SOFA){
data <- read_excel(here("data", "TradeAdjustedCalcs", cur_file),
sheet = "SCENARIOS definition",
range = "A1:OK500")
index <- which(data == "TABLE: Patarget_def", arr.ind = TRUE)
if (plyr::empty(index)) {
index <- which(data == "TABLE: PATarget_def", arr.ind = TRUE)
}
if(!plyr::empty(index)){
data <- data[c(index[1,1]:nrow(data))+ +ifelse(grepl("ETH", cur_file), 8, 9),
c(index[1,2]:(index[1,2]+6))]
colnames(data) <- data[1,]
data <- data[-1,]
data <- data.frame(data[rowSums(is.na(data)) != ncol(data), ])
data <- data %>%
slice(which(Year %in% c(2020, 2050))) %>%
rename(if ("PAareaTarget" %in% colnames(.)) PAareatarget = PAareaTarget) %>%
select(LCAgg, Year, PAareatarget) %>%
# mutate(ALPHA3 = str_sub(cur_file, 15, 17)) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file),
"AUS",
ifelse(grepl("BRA", cur_file),
"BRA",
ifelse(grepl("COL",cur_file),
"COL",
ifelse(grepl("ETH", cur_file),
"ETH",
ifelse(grepl("GBR", cur_file),
"GBR",
"IND")))))) %>%
mutate(Pathway = ifelse(grepl("Current", cur_file),
"CurrentTrend",
ifelse(grepl("National", cur_file),
"NationalCommitments",
"GlobalSustainability"))) %>%
unique()
}
db_pa <- db_pa %>%
rbind.data.frame(data)%>%
mutate(ALPHA3 = gsub("_", "", ALPHA3))
}
# Protected Areas -----------------------------------------------------------
#Extracting data from the Calculators - only run when needed
db_pa <- data.frame()
for (cur_file in file_SOFA){
data <- read_excel(here("data", "TradeAdjustedCalcs", cur_file),
sheet = "SCENARIOS definition",
range = "A1:OK500")
index <- which(data == "TABLE: Patarget_def", arr.ind = TRUE)
if (plyr::empty(index)) {
index <- which(data == "TABLE: PATarget_def", arr.ind = TRUE)
}
if(!plyr::empty(index)){
data <- data[c(index[1,1]:nrow(data))+ +ifelse(grepl("ETH", cur_file), 8, 9),
c(index[1,2]:(index[1,2]+6))]
colnames(data) <- data[1,]
data <- data[-1,]
data <- data.frame(data[rowSums(is.na(data)) != ncol(data), ])
data <- data %>%
slice(which(Year %in% c(2020, 2050))) %>%
rename(PAareatarget = if ("PAareaTarget" %in% colnames(.)) PAareaTarget else PAareatarget) %>%
select(LCAgg, Year, PAareatarget) %>%
# mutate(ALPHA3 = str_sub(cur_file, 15, 17)) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file),
"AUS",
ifelse(grepl("BRA", cur_file),
"BRA",
ifelse(grepl("COL",cur_file),
"COL",
ifelse(grepl("ETH", cur_file),
"ETH",
ifelse(grepl("GBR", cur_file),
"GBR",
"IND")))))) %>%
mutate(Pathway = ifelse(grepl("Current", cur_file),
"CurrentTrend",
ifelse(grepl("National", cur_file),
"NationalCommitments",
"GlobalSustainability"))) %>%
unique()
}
db_pa <- db_pa %>%
rbind.data.frame(data)%>%
mutate(ALPHA3 = gsub("_", "", ALPHA3))
}
cur_file
# Protected Areas -----------------------------------------------------------
#Extracting data from the Calculators - only run when needed
db_pa <- data.frame()
for (cur_file in file_SOFA){
data <- read_excel(here("data", "TradeAdjustedCalcs", cur_file),
sheet = "SCENARIOS definition",
range = "A1:OK500")
index <- which(data == "TABLE: Patarget_def", arr.ind = TRUE)
if (plyr::empty(index)) {
index <- which(data == "TABLE: PATarget_def", arr.ind = TRUE)
}
if(!plyr::empty(index)){
data <- data[c(index[1,1]:nrow(data))+ +ifelse(grepl("ETH", cur_file), 8, 9),
c(index[1,2]:(index[1,2]+6))]
colnames(data) <- data[1,]
data <- data[-1,]
data <- data.frame(data[rowSums(is.na(data)) != ncol(data), ])
PAareaTarget
data <- data %>%
slice(which(Year %in% c(2020, 2050))) %>%
{if ("COL" %in% cur_file) rename(., PAareaTarget = "PAareatarget") else .} %>%
select(LCAgg, Year, PAareatarget) %>%
# mutate(ALPHA3 = str_sub(cur_file, 15, 17)) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file),
"AUS",
ifelse(grepl("BRA", cur_file),
"BRA",
ifelse(grepl("COL",cur_file),
"COL",
ifelse(grepl("ETH", cur_file),
"ETH",
ifelse(grepl("GBR", cur_file),
"GBR",
"IND")))))) %>%
mutate(Pathway = ifelse(grepl("Current", cur_file),
"CurrentTrend",
ifelse(grepl("National", cur_file),
"NationalCommitments",
"GlobalSustainability"))) %>%
unique()
}
db_pa <- db_pa %>%
rbind.data.frame(data)%>%
mutate(ALPHA3 = gsub("_", "", ALPHA3))
}
