#                                                                 str_sub(cur_file, 40, 42),
#                                                                 ifelse(grepl("National", cur_file),
#                                                                        str_sub(cur_file, 46, 48),
#                                                                        str_sub(cur_file, 47, 49))))))))) %>%
#       unique()
#   }
#
#
#   db_full <- db_full %>%
#     rbind.data.frame(data) %>%
#     dplyr::mutate(ALPHA3 = gsub("_", "", ALPHA3))
# }
#
# db_herd <- db_full %>%
#   select(Pathway, ALPHA3, ANIMAL_GLOBIOM, YEAR, FinFeasHerd) %>%
#   mutate(country = ifelse(nchar(ALPHA3) == 4 , substr(ALPHA3, 2, 4),
#                           ifelse(ALPHA3 == "RME", "NMC", ALPHA3))) %>%
#   data.frame()
#
# xlsx::write.xlsx(db_herd, file = here("data",  "Manure", paste0(format(Sys.Date(),format = "%y%m%d"), "_Extracted_herdsize.xlsx")), row.names = F)
db_herd <- read_excel(here("data",  "Manure", "240513_Extracted_herdsize.xlsx")) %>%
# mutate(ALPHA3 = ifelse(ALPHA3 == "RME", "NMC",
#                        ifelse(nchar(ALPHA3)>3, stringr::str_sub(ALPHA3, 2, 4), ALPHA3))) %>%
select(-ALPHA3) %>%
rename(ALPHA3 = country) %>%
mutate(TLU = as.numeric(FinFeasHerd)) %>%
select(-FinFeasHerd)
# merge with GAMS manure data ----------------------------------------------
db_manure <- read_excel(here("data", "Manure", "Nmanure_GAMS.xlsx"),
sheet = "All_Nmanure_TLU") %>%
filter(!(is.na(ALPHA3))) %>%
pivot_longer(!ALPHA3, values_to = "Nmanure_TLU", names_to = "ANIMAL_GLOBIOM")
#Total N inputs from manure in 1000 t N for each year
db_manure_herd <- db_herd %>%
mutate(ANIMAL_GLOBIOM = ifelse(ANIMAL_GLOBIOM == "SGTD", "SGTO", ANIMAL_GLOBIOM)) %>%
left_join(db_manure) %>%
mutate(Nmanure_Anim = Nmanure_TLU*TLU/1000) %>%
group_by(Pathway, ALPHA3, YEAR) %>%
reframe(NManure = sum(Nmanure_Anim, na.rm = T)) %>%
rename_all(tolower) %>%
rename(country = alpha3) %>%
filter(!is.na(year))
# ggplot(db_manure_herd) +
#   geom_line(aes(x = as.numeric(year), y = nmanure, linetype = pathway, colour = pathway),
#             linewidth = 1)+
#   facet_wrap(~country)
# CalcNLeftpasture in 1000 t N
db_N <- all_data %>%
select(pathway, country, year, calcn_org, calcn_synth) %>%
######################### CAREFUL ONLY HAVE EXTRACTED WITH TRADE ADJUSTMENT ###############################
#filter(tradeadjustment == "Yes") %>%
################################################################################
mutate(year = as.character(year))
# mutate(country = gsub("_", "", country)) %>%
# mutate(country = ifelse(country == "RMECAS", "NMC",
#                         ifelse(nchar(country)>3, stringr::str_sub(country, 2, 4), country)))
db_NleftPasture <- db_manure_herd %>%
left_join(db_N) %>%
mutate(NPasture_beforeadj = nmanure - calcn_org,
CalcNLeftPasture = pmax(0, nmanure - calcn_org))
# ggplot(db_NleftPasture) +
#   geom_line(aes(x = as.numeric(year), y = CalcNLeftPasture, linetype = pathway, colour = pathway),
#             linewidth = 1)
write.xlsx(db_NleftPasture, file = here("output", "N", paste0(format(Sys.Date(), format = "%y%m%d"), "a_ExpostNComputations_SOFA.xlsx")))
aus_data <- read_xlsx(here("data", "report_AUS_20240306_9H01.xlsx"), sheet = "Indicators") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_diet", "GS_affor", "GS_live_rumdensity"))
bra_data <- read_xlsx(here("data", "report_BRA_20240306_10H44.xlsx"), sheet = "Indicators") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_agrexp", "GS_diet", "GS_crop"))
col_data <- read_xlsx(here("data", "report_COL_20240325_15H07.xlsx"), sheet = "Indicators") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_diet", "GS_crop", "GS_pop_urban"))
eth_data <- read_xlsx(here("data", "report_ETH_20240426_12H01.xlsx"), sheet = "Indicators") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_pop", "GS_agrexp", "GS_crop"))
gbr_data <- read_xlsx(here("data", "report_GBR_20240306_10H43.xlsx"), sheet = "Indicators")  %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_diet", "GS_foodwaste", "GS_crop"))
all_data <- aus_data %>%
bind_rows(bra_data) %>%
bind_rows(col_data) %>%
bind_rows(eth_data) %>%
bind_rows(gbr_data) %>%
rename(country = Location, year = Year, pathway = Pathway, calcn_org = CalcN_org, calcn_synth = CalcN_synth) %>%
mutate(pathway = if_else(pathway == "Current Trend_Yes", "CurrentTrend", pathway)) %>%
mutate(country = ifelse(country == "Australia", "AUS",
ifelse(country == "Brazil", "BRA",
ifelse(country == "Ethiopia", "ETH",
ifelse(country == "UK", "GBR",
ifelse(country == "Colombia", "COL", country))))))
# file --------------------------------------------------------------------
file <- list.files(path = here("data", "SOFA extraction"))
#Extracting data from the Calculators - only run when needed
#<<<<<<< HEAD
#
# db_full <- data.frame()
#
# for (cur_file in file){
#   print(cur_file)
#   #???Extract the right sheet from calculators
#    data <- read_excel(here("data", "SOFA extraction", cur_file),
#                      sheet = "5_feas_livestock",
#                      range = "AA20:BZ175")
#   index <- which(data == "TABLE: Calc_FeasProdLivestock" | data == "TABLE: Calc_FeasProdLivestok", arr.ind = T)
#
#   if(!plyr::empty(index)){#Don't know if the table is in the calculator; we check before digging in
#     #if it is in the calc than we only want a certain amount of columns after "Biofuel_scen" cell
#     data <- data[c((index[1,1]+7):nrow(data)), c(index[1,2]:(index[1,2]+30))]
#     colnames(data) <- data[1,]
#     data <- data[-1,]
#     data <- data.frame(data[rowSums(is.na(data)) != ncol(data), ])
#
#
#     data <- data %>%
#       #slice(which(Year %in% c(2015, 2050))) %>%
#       select(ANIMAL_GLOBIOM, YEAR, FinFeasHerd) %>%
#       mutate(Pathway = ifelse(grepl("affor", cur_file),
#                               "GS_affor",
#                               ifelse(grepl("diet", cur_file),
#                                      "GS_diet",
#                                      ifelse(grepl("liverum", cur_file),
#                                             "GS_live_rum",
#                                             ifelse(grepl("agrexp", cur_file),
#                                                    "GS_agrexp",
#                                                    ifelse(grepl("crop", cur_file),
#                                                           "GS_crop",
#                                                           ifelse(grepl("popurban", cur_file),
#                                                                  "GS_pop_urban",
#                                                                  ifelse(grepl("pop", cur_file),
#                                                                         "GS_pop",
#                                                                         ifelse(grepl("foodwaste", cur_file),
#                                                                                "GS_foodwaste",
#                                                                                ifelse(grepl("Current", cur_file),
#                                                                                       "CurrentTrend",
#                                                                                       ifelse(grepl("National", cur_file),
#                                                                                              "NationalCommitments",
#                                                                                              "GlobalSustainability"))))))))))) %>%
#       mutate(ALPHA3 = ifelse(grepl("AUS", cur_file), "AUS",
#                              ifelse(grepl("BRA", cur_file), "BRA",
#                                     ifelse(grepl("COL", cur_file), "COL",
#                                            ifelse(grepl("ETH", cur_file), "ETH",
#                                                   ifelse(grepl("GBR", cur_file), "GBR",
#                                                          ifelse(grepl("Current", cur_file),
#                                                                 str_sub(cur_file, 40, 42),
#                                                                 ifelse(grepl("National", cur_file),
#                                                                        str_sub(cur_file, 46, 48),
#                                                                        str_sub(cur_file, 47, 49))))))))) %>%
#       unique()
#   }
#
#
#   db_full <- db_full %>%
#     rbind.data.frame(data) %>%
#     dplyr::mutate(ALPHA3 = gsub("_", "", ALPHA3))
# }
#
# db_herd <- db_full %>%
#   select(Pathway, ALPHA3, ANIMAL_GLOBIOM, YEAR, FinFeasHerd) %>%
#   mutate(country = ifelse(nchar(ALPHA3) == 4 , substr(ALPHA3, 2, 4),
#                           ifelse(ALPHA3 == "RME", "NMC", ALPHA3))) %>%
#   data.frame()
#
# xlsx::write.xlsx(db_herd, file = here("data",  "Manure", paste0(format(Sys.Date(),format = "%y%m%d"), "_Extracted_herdsize.xlsx")), row.names = F)
db_herd <- read_excel(here("data",  "Manure", "240513_Extracted_herdsize.xlsx")) %>%
# mutate(ALPHA3 = ifelse(ALPHA3 == "RME", "NMC",
#                        ifelse(nchar(ALPHA3)>3, stringr::str_sub(ALPHA3, 2, 4), ALPHA3))) %>%
select(-ALPHA3) %>%
rename(ALPHA3 = country) %>%
mutate(TLU = as.numeric(FinFeasHerd)) %>%
select(-FinFeasHerd)
# merge with GAMS manure data ----------------------------------------------
db_manure <- read_excel(here("data", "Manure", "Nmanure_GAMS_V4.xlsx"),
sheet = "All_Nmanure_TLU") %>%
filter(!(is.na(ALPHA3))) %>%
pivot_longer(!ALPHA3, values_to = "Nmanure_TLU", names_to = "ANIMAL_GLOBIOM")
#Total N inputs from manure in 1000 t N for each year
db_manure_herd <- db_herd %>%
mutate(ANIMAL_GLOBIOM = ifelse(ANIMAL_GLOBIOM == "SGTD", "SGTO", ANIMAL_GLOBIOM)) %>%
left_join(db_manure) %>%
mutate(Nmanure_Anim = Nmanure_TLU*TLU/1000) %>%
group_by(Pathway, ALPHA3, YEAR) %>%
reframe(NManure = sum(Nmanure_Anim, na.rm = T)) %>%
rename_all(tolower) %>%
rename(country = alpha3) %>%
filter(!is.na(year))
# ggplot(db_manure_herd) +
#   geom_line(aes(x = as.numeric(year), y = nmanure, linetype = pathway, colour = pathway),
#             linewidth = 1)+
#   facet_wrap(~country)
# CalcNLeftpasture in 1000 t N
db_N <- all_data %>%
select(pathway, country, year, calcn_org, calcn_synth) %>%
######################### CAREFUL ONLY HAVE EXTRACTED WITH TRADE ADJUSTMENT ###############################
#filter(tradeadjustment == "Yes") %>%
################################################################################
mutate(year = as.character(year))
# mutate(country = gsub("_", "", country)) %>%
# mutate(country = ifelse(country == "RMECAS", "NMC",
#                         ifelse(nchar(country)>3, stringr::str_sub(country, 2, 4), country)))
db_NleftPasture <- db_manure_herd %>%
left_join(db_N) %>%
mutate(NPasture_beforeadj = nmanure - calcn_org,
CalcNLeftPasture = pmax(0, nmanure - calcn_org))
# ggplot(db_NleftPasture) +
#   geom_line(aes(x = as.numeric(year), y = CalcNLeftPasture, linetype = pathway, colour = pathway),
#             linewidth = 1)+
#   facet_wrap(~country)
write.xlsx(db_NleftPasture, file = here("output", "N", paste0(format(Sys.Date(), format = "%y%m%d"), "a_ExpostNComputations_SOFA.xlsx")))
aus_data <- read_xlsx(here("data", "report_AUS_20240306_9H01.xlsx"), sheet = "Indicators") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_diet", "GS_affor", "GS_live_rumdensity"))
bra_data <- read_xlsx(here("data", "report_BRA_20240306_10H44.xlsx"), sheet = "Indicators") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_agrexp", "GS_diet", "GS_crop"))
col_data <- read_xlsx(here("data", "report_COL_20240325_15H07.xlsx"), sheet = "Indicators") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_diet", "GS_crop", "GS_pop_urban"))
eth_data <- read_xlsx(here("data", "report_ETH_20240426_12H01.xlsx"), sheet = "Indicators") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_pop", "GS_agrexp", "GS_crop"))
gbr_data <- read_xlsx(here("data", "report_GBR_20240306_10H43.xlsx"), sheet = "Indicators")  %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_diet", "GS_foodwaste", "GS_crop"))
all_data <- aus_data %>%
bind_rows(bra_data) %>%
bind_rows(col_data) %>%
bind_rows(eth_data) %>%
bind_rows(gbr_data) %>%
rename(country = Location, year = Year, pathway = Pathway, calcn_org = CalcN_org, calcn_synth = CalcN_synth) %>%
mutate(pathway = if_else(pathway == "Current Trend_Yes", "CurrentTrend", pathway)) %>%
mutate(country = ifelse(country == "Australia", "AUS",
ifelse(country == "Brazil", "BRA",
ifelse(country == "Ethiopia", "ETH",
ifelse(country == "UK", "GBR",
ifelse(country == "Colombia", "COL", country))))))
# file --------------------------------------------------------------------
file <- list.files(path = here("data", "SOFA extraction"))
#Extracting data from the Calculators - only run when needed
#<<<<<<< HEAD
#
# db_full <- data.frame()
#
# for (cur_file in file){
#   print(cur_file)
#   #???Extract the right sheet from calculators
#    data <- read_excel(here("data", "SOFA extraction", cur_file),
#                      sheet = "5_feas_livestock",
#                      range = "AA20:BZ175")
#   index <- which(data == "TABLE: Calc_FeasProdLivestock" | data == "TABLE: Calc_FeasProdLivestok", arr.ind = T)
#
#   if(!plyr::empty(index)){#Don't know if the table is in the calculator; we check before digging in
#     #if it is in the calc than we only want a certain amount of columns after "Biofuel_scen" cell
#     data <- data[c((index[1,1]+7):nrow(data)), c(index[1,2]:(index[1,2]+30))]
#     colnames(data) <- data[1,]
#     data <- data[-1,]
#     data <- data.frame(data[rowSums(is.na(data)) != ncol(data), ])
#
#
#     data <- data %>%
#       #slice(which(Year %in% c(2015, 2050))) %>%
#       select(ANIMAL_GLOBIOM, YEAR, FinFeasHerd) %>%
#       mutate(Pathway = ifelse(grepl("affor", cur_file),
#                               "GS_affor",
#                               ifelse(grepl("diet", cur_file),
#                                      "GS_diet",
#                                      ifelse(grepl("liverum", cur_file),
#                                             "GS_live_rum",
#                                             ifelse(grepl("agrexp", cur_file),
#                                                    "GS_agrexp",
#                                                    ifelse(grepl("crop", cur_file),
#                                                           "GS_crop",
#                                                           ifelse(grepl("popurban", cur_file),
#                                                                  "GS_pop_urban",
#                                                                  ifelse(grepl("pop", cur_file),
#                                                                         "GS_pop",
#                                                                         ifelse(grepl("foodwaste", cur_file),
#                                                                                "GS_foodwaste",
#                                                                                ifelse(grepl("Current", cur_file),
#                                                                                       "CurrentTrend",
#                                                                                       ifelse(grepl("National", cur_file),
#                                                                                              "NationalCommitments",
#                                                                                              "GlobalSustainability"))))))))))) %>%
#       mutate(ALPHA3 = ifelse(grepl("AUS", cur_file), "AUS",
#                              ifelse(grepl("BRA", cur_file), "BRA",
#                                     ifelse(grepl("COL", cur_file), "COL",
#                                            ifelse(grepl("ETH", cur_file), "ETH",
#                                                   ifelse(grepl("GBR", cur_file), "GBR",
#                                                          ifelse(grepl("Current", cur_file),
#                                                                 str_sub(cur_file, 40, 42),
#                                                                 ifelse(grepl("National", cur_file),
#                                                                        str_sub(cur_file, 46, 48),
#                                                                        str_sub(cur_file, 47, 49))))))))) %>%
#       unique()
#   }
#
#
#   db_full <- db_full %>%
#     rbind.data.frame(data) %>%
#     dplyr::mutate(ALPHA3 = gsub("_", "", ALPHA3))
# }
#
# db_herd <- db_full %>%
#   select(Pathway, ALPHA3, ANIMAL_GLOBIOM, YEAR, FinFeasHerd) %>%
#   mutate(country = ifelse(nchar(ALPHA3) == 4 , substr(ALPHA3, 2, 4),
#                           ifelse(ALPHA3 == "RME", "NMC", ALPHA3))) %>%
#   data.frame()
#
# xlsx::write.xlsx(db_herd, file = here("data",  "Manure", paste0(format(Sys.Date(),format = "%y%m%d"), "_Extracted_herdsize.xlsx")), row.names = F)
db_herd <- read_excel(here("data",  "Manure", "240513_Extracted_herdsize.xlsx")) %>%
# mutate(ALPHA3 = ifelse(ALPHA3 == "RME", "NMC",
#                        ifelse(nchar(ALPHA3)>3, stringr::str_sub(ALPHA3, 2, 4), ALPHA3))) %>%
select(-ALPHA3) %>%
rename(ALPHA3 = country) %>%
mutate(TLU = as.numeric(FinFeasHerd)) %>%
select(-FinFeasHerd)
# merge with GAMS manure data ----------------------------------------------
db_manure <- read_excel(here("data", "Manure", "Nmanure_GAMS.xlsx"),
sheet = "All_Nmanure_TLU") %>%
filter(!(is.na(ALPHA3))) %>%
pivot_longer(!ALPHA3, values_to = "Nmanure_TLU", names_to = "ANIMAL_GLOBIOM")
#Total N inputs from manure in 1000 t N for each year
db_manure_herd <- db_herd %>%
mutate(ANIMAL_GLOBIOM = ifelse(ANIMAL_GLOBIOM == "SGTD", "SGTO", ANIMAL_GLOBIOM)) %>%
left_join(db_manure) %>%
mutate(Nmanure_Anim = Nmanure_TLU*TLU/1000) %>%
group_by(Pathway, ALPHA3, YEAR) %>%
reframe(NManure = sum(Nmanure_Anim, na.rm = T)) %>%
rename_all(tolower) %>%
rename(country = alpha3) %>%
filter(!is.na(year))
# ggplot(db_manure_herd) +
#   geom_line(aes(x = as.numeric(year), y = nmanure, linetype = pathway, colour = pathway),
#             linewidth = 1)+
#   facet_wrap(~country)
# CalcNLeftpasture in 1000 t N
db_N <- all_data %>%
select(pathway, country, year, calcn_org, calcn_synth) %>%
######################### CAREFUL ONLY HAVE EXTRACTED WITH TRADE ADJUSTMENT ###############################
#filter(tradeadjustment == "Yes") %>%
################################################################################
mutate(year = as.character(year))
# mutate(country = gsub("_", "", country)) %>%
# mutate(country = ifelse(country == "RMECAS", "NMC",
#                         ifelse(nchar(country)>3, stringr::str_sub(country, 2, 4), country)))
db_NleftPasture <- db_manure_herd %>%
left_join(db_N) %>%
mutate(NPasture_beforeadj = nmanure - calcn_org,
CalcNLeftPasture = pmax(0, nmanure - calcn_org))
# ggplot(db_NleftPasture) +
#   geom_line(aes(x = as.numeric(year), y = CalcNLeftPasture, linetype = pathway, colour = pathway),
#             linewidth = 1)+
#   facet_wrap(~country)
write.xlsx(db_NleftPasture, file = here("output", "N", paste0(format(Sys.Date(), format = "%y%m%d"), "_ExpostNComputations_SOFA.xlsx")))
# Libraries ---------------------------------------------------------------
library(here)
library(dplyr)
library(readr)
library(readxl)
library(conflicted)
library(readxl)
library(ggplot2)
library(hrbrthemes)
library(stringr)
library(writexl)
library(RColorBrewer)
library(openxlsx)
library(tidyr)
conflict_prefer("filter", "dplyr")
conflicts_prefer(dplyr::lag)
here()
aus_data <- read_xlsx(here("data", "report_AUS_20240306_9H01.xlsx"), sheet = "Indicators") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_diet", "GS_affor", "GS_live_rumdensity"))
bra_data <- read_xlsx(here("data", "report_BRA_20240306_10H44.xlsx"), sheet = "Indicators") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_agrexp", "GS_diet", "GS_crop"))
col_data <- read_xlsx(here("data", "report_COL_20240325_15H07.xlsx"), sheet = "Indicators") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_diet", "GS_crop", "GS_pop_urban"))
eth_data <- read_xlsx(here("data", "report_ETH_20240426_12H01.xlsx"), sheet = "Indicators") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_pop", "GS_agrexp", "GS_crop"))
gbr_data <- read_xlsx(here("data", "report_GBR_20240306_10H43.xlsx"), sheet = "Indicators")  %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_diet", "GS_foodwaste", "GS_crop"))
all_data <- aus_data %>%
bind_rows(bra_data) %>%
bind_rows(col_data) %>%
bind_rows(eth_data) %>%
bind_rows(gbr_data)
all_data <- all_data %>%
select(Pathway, Location, Population, Year, kcal_feas, kcal_PoU,
ForestChange, CalcCropland, CalcPasture, CalcOtherLand,
CalcFarmLabourFTE,
CalcCropN2O, CalcCropCH4, CalcCropCO2, CalcLiveN2O, CalcLiveCH4, CalcDeforCO2, CalcOtherLUCCO2, CalcSequestCO2,
kcal_feas, kcal_mder,
LNPPMatureForest, LNPPMatureOtherLand,
CalcN_org, CalcN_synth,
CalcWFblue,
NewForestChange, LNPPNewForest, LNPPNewOtherLand, AgroecoSh) %>%
mutate(Cropland_change = CalcCropland - lag(CalcCropland)) %>%
mutate(Pasture_change = CalcPasture - lag(CalcPasture)) %>%
mutate(OtherLand_change = CalcOtherLand - lag(CalcOtherLand)) %>%
mutate(LNPPNewOtherLand_change = LNPPNewOtherLand - lag(LNPPNewOtherLand)) %>%
mutate(LNPPNewForest_change = LNPPNewForest - lag(LNPPNewForest)) %>%
# filter(Year %in% c("2030", "2050")) %>%
mutate(CO2 = CalcCropCO2 + CalcDeforCO2 + CalcOtherLUCCO2 + CalcSequestCO2) %>%
mutate(CH4 = CalcCropCH4 + CalcLiveCH4) %>%
# Commodities -----------------------------
aus_comm <- read_xlsx(here("data", "report_AUS_20240306_9H01.xlsx"), sheet = "Commodities")
gbr_comm <- read_xlsx(here("data", "report_GBR_20240306_10H43.xlsx"), sheet = "Commodities")
# Commodities -----------------------------
aus_comm <- read_xlsx(here("data", "report_AUS_20240306_9H01.xlsx"), sheet = "Commodities")
bra_comm <- read_xlsx(here("data", "report_BRA_20240306_10H44.xlsx"), sheet = "Commodities")
col_comm <- read_xlsx(here("data", "report_COL_20240325_15H07.xlsx"), sheet = "Commodities")
eth_comm <- read_xlsx(here("data", "report_ETH_20240426_12H01.xlsx"), sheet = "Commodities")
gbr_comm <- read_xlsx(here("data", "report_GBR_20240306_10H43.xlsx"), sheet = "Commodities")
all_comm <- aus_comm %>%
bind_rows(bra_comm) %>%
bind_rows(col_comm) %>%
bind_rows(eth_comm) %>%
bind_rows(gbr_comm) %>%
rename(Pathway = `Current Trend`) %>%
# filter(Year %in% c("2030", "2050"))%>%
select(Location, Pathway, Year, Product, kcalfeasprod)
mapping<- read_excel(here("data", "mapping_product_group.xlsx")) %>%
rename(Product = PRODUCT)
all_kcal <- all_comm %>%
inner_join(mapping, by ="Product") %>%
unique %>%
mutate("Anim_Plant" = ifelse(PROD_GROUP %in% c("ANIMFAT", "EGGS", "FISH", "MILK", "REDMEAT", "PORK", "POULTRY"), "ANIM", "PLANT")) %>%
group_by(Pathway, Location, Year, Anim_Plant) %>%
mutate(kcal_anim_plant = sum(kcalfeasprod)) %>%
select(-kcalfeasprod, -PROD_GROUP, -Product)
all_kcal_final <- all_kcal %>%
pivot_wider(names_from = Anim_Plant, values_from = kcal_anim_plant, values_fn = list(kcal_anim_plant = function(x) x[which.min(!is.na(x))])) %>%
rename(kcal_anim = ANIM, kcal_plant = PLANT) %>%
replace(is.na(.), 0)
all_data <- left_join(all_data, all_kcal_final %>% select(Pathway, Year, kcal_plant, Location, kcal_anim), by = c("Pathway", "Location", "Year")) %>%
unique()
mapping_eat<- read_excel(here("data", "mapping_product_group_EAT.xlsx")) %>%
rename(Product = PRODUCT)
all_kcal_eat <- all_comm %>%
inner_join(mapping_eat, by ="Product") %>%
unique %>%
group_by(Pathway, Location, Year, EAT_foodgroup) %>%
mutate(kcal_eat = sum(kcalfeasprod)) %>%
select(-kcalfeasprod, -PROD_GROUP, -Product)
all_kcal_eat_final <- all_kcal_eat %>%
pivot_wider(names_from = EAT_foodgroup, values_from = kcal_eat, values_fn = list(kcal_eat = function(x) x[which.min(!is.na(x))])) %>%
rename(kcal_NotIdentifiedinEATLancet = "NA") %>%
replace(is.na(.), 0)
all_kcal_eat_final <- all_kcal_eat %>%
pivot_wider(names_from = EAT_foodgroup, values_from = kcal_eat, values_fn = list(kcal_eat = function(x) x[which.min(!is.na(x))])) %>%
rename(kcal_NotIdentifiedinEATLancet = "NA") %>%
rename_with(
~ if_else(. %in% c("Location", "Pathway", "Year", "kcal_NotIdentified_EATLancet"), ., paste0("kcal_", .,"_EATLancet")),
-c(Location, Pathway, Year, kcal_NotIdentifiedinEATLancet)
)
all_data <- left_join(all_data, all_kcal_eat_final, by = c("Pathway", "Location", "Year")) %>%
unique() %>%
mutate(Pathway = recode(Pathway, "Current Trend_Yes" = "Current Trend"))
mapping_fao_fbs <- read_excel(here("data", "FAO_product_maps_2023_ML.xlsx")) %>%
rename(Product = Fable_frpoduct) %>%
mutate(Product = tolower(Product)) %>%
select(-FAO_ItemCode, -`SLORD GROUP Matched`)
View(mapping_fao_fbs)
View(mapping_fao_fbs)
all_kcal_fao_fbs <- all_comm %>%
inner_join(mapping_fao_fbs, by ="Product", relationship = "many-to-many") %>%
unique %>%
group_by(Pathway, Location, Year, `FAO FBS`) %>%
mutate(kcal_fao_fbs = sum(kcalfeasprod)) %>%
select(-kcalfeasprod, -Product)
View(all_kcal_fao_fbs)
all_kcal_fao_fbs$FAO_FBS
View(all_kcal_fao_fbs)
all_kcal_fao_fbs$FAO FBS
all_kcal_fao_fbs$`FAO FBS`
sum(is.na(all_kcal_fao_fbs$`FAO FBS`))
View(all_kcal_fao_fbs)
sum(is.na(all_kcal_fao_fbs$`FAO FBS`) & all_kcal_fao_fbs$kcal_fao_fbs != 0)
sum(is.na(all_kcal_fao_fbs$`FAO FBS`) & all_kcal_fao_fbs$kcal_fao_fbs = 0)
sum(is.na(all_kcal_fao_fbs$`FAO FBS`) & all_kcal_fao_fbs$kcal_fao_fbs == 0)
sum(is.na(all_kcal_fao_fbs$`FAO FBS`) & all_kcal_fao_fbs$kcal_fao_fbs != 0)
View(all_comm)
View(all_comm)
View(all_comm)
View(all_kcal_fao_fbs)
all_kcal_fao_fbs_final <- all_kcal_fao_fbs %>%
pivot_wider(names_from = `FAO FBS`, values_from = kcal_fao_fbs, values_fn = list(kcal_fao_fbs = function(x) x[which.min(!is.na(x))])) %>%
select(-"NA") %>%
replace(is.na(.), 0) %>%
rename_with(
~ if_else(. %in% c("Location", "Pathway", "Year"), ., paste0("kcal_", .,"_fao_fbs")),
-c(Location, Pathway, Year)
)
all_data_fao_fbs <- left_join(all_data, all_kcal_fao_fbs_final, by = c("Pathway", "Location", "Year")) %>%
unique() %>%
mutate(Pathway = recode(Pathway, "Current Trend_Yes" = "Current Trend"))
View(all_data_fao_fbs)
all_kcal_fao_fbs <- all_comm %>%
inner_join(mapping_fao_fbs, by ="Product", relationship = "many-to-many") %>%
unique
View(all_kcal_fao_fbs)
all_kcal_fao_fbs <- all_comm %>%
inner_join(mapping_fao_fbs, by ="Product", relationship = "many-to-many") %>%
unique %>%
group_by(Pathway, Location, Year, `FAO FBS`) %>%
mutate(kcal_fao_fbs = sum(kcalfeasprod)) %>%
select(-kcalfeasprod, -Product)
