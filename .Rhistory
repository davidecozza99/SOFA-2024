#
#
# db_full_affor_temp <- db_full_affor %>%
# mutate(ALPHA3 = ifelse(grepl("\\.", ALPHA3), stringr::str_sub(ALPHA3, 1, 3), ALPHA3))
#
# write.xlsx(db_full_affor %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedAfforestation.xlsx")), row.names = F)
db_full_affor <- read_excel(here("data", "extracted_scenathon", "20240523_ExtractedAfforestation.xlsx")) %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "RASP", "R_ASP",
ifelse(ALPHA3 == "RCSA", "R_CSA",
ifelse(ALPHA3 == "RNEU", "R_NEU",
ifelse(ALPHA3 == "ROEU", "R_OEU",
ifelse(ALPHA3 == "RSSA", "R_SSA",
ifelse(ALPHA3 == "RMECAS", "NMC", ALPHA3))))))) %>%
# Convert newforest column to numeric
mutate(newforest = as.numeric(newforest)) %>%
group_by(year, afforscen, ALPHA3, Pathway ) %>%
mutate(newforest = sum(newforest, na.rm = TRUE)) %>%
unique()
#Extract the afforestation target
db_full_afforestation_agg <- db_scenarios %>%
mutate(ALPHA3 =ifelse(ALPHA3 == "RMECAS", "NMC",
ifelse(ALPHA3 == "TUR", "TUR", ALPHA3))) %>%
unique() %>%
select(-agricultural_land_expansion) %>%
mutate(Pathway = if_else(Pathway == "NationalCommitment", "NationalCommitments", Pathway)) %>%
left_join(db_full_affor %>%
rename(Year = year, afforestation = afforscen)) %>%
mutate(Year = as.numeric(Year)) %>%
mutate(NewForest = as.numeric(newforest)) %>%
select(ALPHA3, Pathway, Year, NewForest)
#Computing afforestation absolute difference 2020 - 2050 in 1000 ha
db_change_afforestation <- db_full_afforestation_agg %>%
mutate(var_pivot = paste0("affor_", Year)) %>%
select(var_pivot, Pathway, ALPHA3, NewForest) %>%
pivot_wider(names_from = var_pivot,
values_from = NewForest) %>%
select(-affor_NA) %>%
mutate(Affor = (affor_2050-affor_2020)/1000) %>%
mutate(across(starts_with("affor_"), as.numeric)) %>%
select(ALPHA3, Pathway, Affor) %>%
data.frame() %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "NMC", "R_NMC", ALPHA3))
# %>%
# mutate(Affor = ifelse(affor > 20000 , 20000, affor))
# db_change_afforestation <- df %>%
#   filter(year == "2020") %>%
#   mutate(Pathway = if_else(Pathway == "CurrentTrends", "CurrentTrend", Pathway)) %>%
#   left_join(db_change_afforestation) %>%
#   select(ALPHA3, Pathway, Affor, calcforest) %>%
#   mutate(Affor = (Affor/calcforest)) %>%
#   select(-calcforest)
# Food Waste --------------------------------------------------------
#
# db_full_waste <- data.frame()
#
# for (cur_file in file){
#   #???Extract the right sheet from calculators
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                      sheet = "1_calc_human_demand",
#                      range = "A27:AP1116")
#
#   if(grepl("DNK|GRC|NPL|R_ASP|R_CSA|R_NEU|R_OEU|R_SSA|RMECAS|TUR", cur_file)){
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                        sheet = "1_calc_human_demand",
#                        range = "A31:AQ1116")
#   }
#
#
#
#   data <- data %>%
#     slice(which(year %in% c(2020, 2050))) %>%
#     select(year, food_waste, LOSS_SCEN, fproduct, prodgroup) %>%
#     mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                            str_sub(cur_file, 40, 42),
#                            ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                   str_sub(cur_file, 47, 49)))) %>%
#     mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "ASP",
#                            ifelse(ALPHA3 == "R_C", "CSA",
#                                   ifelse(ALPHA3 == "R_N", "NEU",
#                                          ifelse(ALPHA3 == "R_O", "OEU",
#                                                 ifelse(ALPHA3 == "R_S", "SSA",
#                                                        ifelse(ALPHA3 == "RME", "NMC", ALPHA3))))))) %>%
#     mutate(Pathway = ifelse(grepl("Current", cur_file),
#                             "CurrentTrend",
#                             ifelse(grepl("National", cur_file),
#                                    "NationalCommitments",
#                                    "GlobalSustainability"))) %>%
#     unique()
#
#   db_full_waste <- db_full_waste %>%
#     rbind.data.frame(data)
# }
#
# write.xlsx(db_full_waste %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedFoodWaste.xlsx")), row.names = F)
#
db_full_waste <- readxl::read_excel(here("data", "extracted_scenathon", "20240523_ExtractedFoodWaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2050) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE)) %>% ##from here added new lines (See if the results makes sense)
ungroup() %>%
mutate(kcal_without_fw = kcal/(1-food_waste)) %>%
mutate(food_waste_kcal = kcal_without_fw - kcal) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(sum_food_waste_kcal = sum(food_waste_kcal)) %>%
mutate(food_waste2050 = sum_food_waste_kcal/total_kcal) %>%
ungroup() %>%
select(ALPHA3, Pathway, food_waste2050) %>%
rename(Foodwaste_change=food_waste2050) %>%
unique() %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "ASP", "R_ASP",
ifelse(ALPHA3 == "CSA", "R_CSA",
ifelse(ALPHA3 == "NEU", "R_NEU",
ifelse(ALPHA3 == "OEU", "R_OEU",
ifelse(ALPHA3 == "SSA", "R_SSA",
ifelse(ALPHA3 == "NMC", "R_NMC", ALPHA3))))))) ################ SWhould be final (*do not run next food waste code ) To verify if works when merging the data
# To re add back above, if the results above make no sense
# %>%
#   mutate(weight =  100 * kcal / total_kcal) %>%
#   ungroup() %>%
#   group_by(ALPHA3, Pathway, FPRODUCT) %>%
#   mutate(food_waste_weighted = food_waste * weight)
#
# options(scipen=999)
#Computing share of food waste relative change 2020 - 2050
# db_change_foodwaste <- db_change_foodwaste %>%
#   select(year, ALPHA3, Pathway, FPRODUCT, food_waste_weighted) %>%
#   pivot_wider(names_from = year, names_glue = "Foodwaste_{year}", values_from = food_waste_weighted) %>%
#   mutate(Foodwaste_change = Foodwaste_2050 / Foodwaste_2020) %>%
#   group_by(ALPHA3, Pathway) %>%
#   mutate(Foodwaste_change = mean(Foodwaste_change, na.rm = TRUE)) %>%
#   select(-FPRODUCT, -Foodwaste_2020, -Foodwaste_2050) %>%
#   ungroup() %>%
#   distinct() %>%
#   mutate(ALPHA3 = ifelse(ALPHA3 == "ASP", "R_ASP",
#                       ifelse(ALPHA3 == "CSA", "R_CSA",
#                              ifelse(ALPHA3 == "NEU", "R_NEU",
#                                     ifelse(ALPHA3 == "OEU", "R_OEU",
#                                            ifelse(ALPHA3 == "SSA", "R_SSA",
#                                                   ifelse(ALPHA3 == "NMC", "R_NMC", ALPHA3)))))))
# Protected Areas -----------------------------------------------------------
#Extracting Total Land
total_land <- df %>%
select(ALPHA3, totalland, year) %>%
dplyr::filter (year==2050)
#Extracting data from the Calculators - only run when needed
#
# db_pa <- data.frame()
#
# for (cur_file in file){
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                      sheet = "SCENARIOS definition",
#                      range = "AA1:ZZ1000")
#   index <- which(data == "TABLE: Patarget_def", arr.ind = TRUE)
#
#   if (plyr::empty(index)) {
#     index <- which(data == "TABLE: PATarget_def", arr.ind = TRUE)
#   }
#
#
#   if(!plyr::empty(index)){
#     data <- data[c(index[1,1]:nrow(data)) + ifelse(grepl("ETH", cur_file), 8,
#                                                   ifelse(grepl("CAN", cur_file), 8, 9)),
#                  c(index[1,2]:(index[1,2]+8))]
#     colnames(data) <- data[1,]
#     data <- data[-1,]
#     data <- data.frame(data[rowSums(is.na(data)) != ncol(data), ])
#
#     data <- data %>%
#       slice(which(Year %in% c(2020, 2050))) %>%
#       rename_all(.funs = tolower) %>%
#       select(lcagg, year, paareatarget) %>%
#       mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                              str_sub(cur_file, 40, 42),
#                              ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                     str_sub(cur_file, 47, 49)))) %>%
#       mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "R_ASP",
#                              ifelse(ALPHA3 == "R_C", "R_CSA",
#                                     ifelse(ALPHA3 == "R_N", "R_NEU",
#                                            ifelse(ALPHA3 == "R_O", "R_OEU",
#                                                   ifelse(ALPHA3 == "R_S", "R_SSA",
#                                                          ifelse(ALPHA3 == "RME", "R_NMC", ALPHA3))))))) %>%
#       mutate(Pathway = ifelse(grepl("Current", cur_file),
#                               "CurrentTrend",
#                               ifelse(grepl("National", cur_file),
#                                      "NationalCommitments",
#                                      "GlobalSustainability"))) %>%
#       unique()
#   }
#   db_pa <- db_pa %>%
#     rbind.data.frame(data)
#   # %>%
#   #   mutate(ALPHA3 = gsub("_", "", ALPHA3))
#
# }
#
# write.xlsx(db_pa %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedPA.xlsx")), row.names = F)
### Manually added values for MEX and SWE
db_pa <- readxl::read_excel(here("data", "extracted_scenathon", "20240427_ExtractedPA.xlsx"))
db_change_pa <- db_pa %>%
mutate(paareatarget = as.numeric(paareatarget)) %>%
dplyr::filter(year==2050) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(Total_PA = sum(paareatarget, na.rm = TRUE)) %>%
ungroup() %>%
select(-lcagg, -paareatarget, -year) %>%
distinct() %>%
left_join(total_land, relationship = "many-to-many") %>%
mutate(pa = round(as.numeric(Total_PA) / as.numeric(totalland), 3)) %>%
select(-Total_PA, -totalland, -year ) %>%
unique()
# db_change_pa <- db_pa %>%
#   group_by(ALPHA3, Pathway) %>%
#   mutate(pa = round((as.numeric(Total_PA[year == "2050"]) - as.numeric(Total_PA[year == "2020"])) / as.numeric(Total_PA[year == "2020"]), digits = 2)) %>%
#   select(-year, -Total_PA) %>%
#   unique() %>%
#   mutate(pa = ifelse(pa > 2.5 , 2.5, pa))
#Extracting data from the Calculators - only run when needed
# db_irr <- data.frame()
#
# for (cur_file in file){
#   #???print(cur_file)
#   #???Extract the right sheet from calculators
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                      sheet = "3_calc_crops",
#                      range = "G28:AE798")
#   # if(grepl("SWE", cur_file)){
#   # data <- read_excel(here("data", "Calcs", cur_file),
#   #                      sheet = "2_calc_livestock",
#   #                      range = "BH31:BU75")
#   # }
#
#   data <- data %>%
#     slice(which(YEAR %in% c(2020, 2050))) %>%
#     select(YEAR, CROP, Harvarea, IrrHarvArea) %>%
#     mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                            str_sub(cur_file, 40, 42),
#                            ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                   str_sub(cur_file, 47, 49)))) %>%
#     mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "R_ASP",
#                            ifelse(ALPHA3 == "R_C", "R_CSA",
#                                   ifelse(ALPHA3 == "R_N", "R_NEU",
#                                          ifelse(ALPHA3 == "R_O", "R_OEU",
#                                                 ifelse(ALPHA3 == "R_S", "R_SSA",
#                                                        ifelse(ALPHA3 == "RME", "R_NMC", ALPHA3))))))) %>%
#     mutate(Pathway = ifelse(grepl("Current", cur_file),
#                             "CurrentTrend",
#                             ifelse(grepl("National", cur_file),
#                                    "NationalCommitments",
#                                    "GlobalSustainability"))) %>%
#     unique()
#
#   db_irr <- db_irr %>%
#     rbind.data.frame(data) %>%
#     data.frame()
# }
#
# write.xlsx(db_irr %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedIrr.xlsx")), row.names = F)
db_irr <- readxl::read_excel(here("data", "extracted_scenathon", "20240523_ExtractedIrr.xlsx")) %>%
dplyr::filter(YEAR == 2050)
options(scipen = 999)
db_change_irr <- db_irr %>%
group_by(ALPHA3, Pathway) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway) %>%
mutate(share_irr = (IrrHarvArea / Harvarea) *Harvarea_per_crop) %>%
mutate(share_irr_final = round(sum(share_irr, na.rm = TRUE), 2)) %>%
ungroup() %>%
select(ALPHA3, YEAR, Pathway, share_irr_final) %>%
unique() %>%
select(-YEAR)
# db_agrprac <- data.frame()
#
# for (cur_file in file){
#   #???print(cur_file)
#   #???Extract the right sheet from calculators
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                      sheet = "3_calc_crops",
#                      range = "G28:AE798")
#   # if(grepl("SWE", cur_file)){
#   # data <- read_excel(here("data", "Calcs", cur_file),
#   #                      sheet = "2_calc_livestock",
#   #                      range = "BH31:BU75")
#   # }
#
#   data <- data %>%
#     slice(which(YEAR %in% c(2020, 2050))) %>%
#     select(YEAR, CROP, SPAMgroup, Harvarea, AreaAgroeco) %>%
#     mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                            str_sub(cur_file, 40, 42),
#                            ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                   str_sub(cur_file, 47, 49)))) %>%
#     mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "R_ASP",
#                            ifelse(ALPHA3 == "R_C", "R_CSA",
#                                   ifelse(ALPHA3 == "R_N", "R_NEU",
#                                          ifelse(ALPHA3 == "R_O", "R_OEU",
#                                                 ifelse(ALPHA3 == "R_S", "R_SSA",
#                                                        ifelse(ALPHA3 == "RME", "R_NMC", ALPHA3))))))) %>%
#     mutate(Pathway = ifelse(grepl("Current", cur_file),
#                             "CurrentTrend",
#                             ifelse(grepl("National", cur_file),
#                                    "NationalCommitments",
#                                    "GlobalSustainability"))) %>%
#     unique()
#
#   db_agrprac <- db_agrprac %>%
#     rbind.data.frame(data) %>%
#     data.frame()
# }
#
# write.xlsx(db_agrprac %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedAgrprac.xlsx")), row.names = F)
db_agrprac <- readxl::read_excel(here("data", "extracted_scenathon", "20240523_ExtractedAgrprac.xlsx")) %>%
dplyr::filter(YEAR == 2050)
options(scipen = 999)
db_change_agrprac <- db_agrprac %>%
group_by(ALPHA3, Pathway) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway) %>%
mutate(share_agrprac = (AreaAgroeco / Harvarea) *Harvarea_per_crop) %>%
mutate(share_agrprac_final = round(sum(share_agrprac, na.rm = TRUE), 2)) %>%
ungroup() %>%
select(ALPHA3, YEAR, Pathway, share_agrprac_final) %>%
unique() %>%
select(-YEAR)
# data final --------------------------------------------------------------
data_final <- df_change %>%
left_join(db_change_crop) %>%
left_join(db_change_Live_Prod) %>%
left_join(db_change_RumDensity) %>%
left_join(product_tot) %>%
left_join(db_change_Expansion) %>%
left_join(db_change_afforestation) %>%
left_join(db_change_foodwaste) %>%
left_join(db_change_pa) %>%
left_join(db_change_irr) %>%
left_join(db_change_agrprac) %>%
dplyr::filter(ALPHA3 != "WORLD")
data_final_FABLE <- data_final %>%
#slice(which(!(ALPHA3 %in% c("ASP", "NEU", "NMC", "ROEU", "SSA", "CSA")))) %>%
data.frame()
melted <- melt(data_final_FABLE, id.vars = c("ALPHA3", "Pathway", "afforestation", "agricultural_land_expansion"))
melted$value <- ifelse(melted$variable == "pa", melted$value,
ifelse(melted$variable == "share_irr_final", melted$value,
ifelse(melted$variable == "share_agrprac_final", melted$value,
ifelse(melted$variable == "Foodwaste_change", melted$value,
ifelse(
melted$value!= "NaN" & melted$variable != "Affor",
melted$value-1,
ifelse(melted$variable == "Affor",
melted$value,
NA))))))
melted$sign <- ifelse(melted$value < 0,
0,
1)
complete_data <- melted %>%
select(-afforestation, -agricultural_land_expansion)
var.labs <- c(
Population_change = "Population",
kcal_targ_change = "Calories \nper Capita",
pdty_crop_change = "Crops \nProductivity",
pdty_live_change = "Livestock \nProductivity",
density_change = "Ruminant \nDensity ",
Expansion_change ="Agricultural \nexpansion \n(i)",
Export_quantity_change = "Exports \n(kcal)",
Import_quantity_change = "Imports \n(kcal)",
Foodwaste_change = "Share of \n Food Waste \n(iii)",
Affor = "Afforestation \n(Mha) \n(ii)",
pa= "Protected \n Areas \n(iv)",
share_irr_final= "Irrigated \nArea\n(v)",
share_agrprac_final= "Area under \nAgricological \nPractises\n(vi)"
)
complete_data$Pathway <- factor(as.character(complete_data$Pathway), levels = c("GlobalSustainability", "NationalCommitments", "CurrentTrend"))
complete_data <- complete_data %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "GBR",
"UK",
ALPHA3))
data_SOFA <- complete_data
data_SOFA <- data_SOFA %>%
mutate(Pathway = if_else(ALPHA3 == "IND" & Pathway == "NationalCommitments", NA_character_, Pathway),
Pathway = if_else(ALPHA3 == "IND" & Pathway == "GlobalSustainability", "FSDP", Pathway))
data_SOFA <- data_SOFA %>% drop_na(Pathway)
data_SOFA <- data_SOFA %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Population_change", 0.182, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "kcal_targ_change", 0.564, value)) %>%
mutate(sign = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "pdty_crop_change", 1, sign)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "pdty_crop_change", 0.625, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "pdty_live_change", 0.0, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "density_change", 0.0, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Export_quantity_change", 0.0, value)) %>%
mutate(sign = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Import_quantity_change", 1, sign)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "food_waste", 0.404, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "pa", 0.01, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Expansion_change", -0.5, value)) %>%
mutate(sign = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Expansion_change", 0, sign)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "share_irr_final", 0.16, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "share_agrprac_final", 0.0, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Import_quantity_change", 02.065, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "CurrentTrend" & variable == "Affor", 28.5375, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Population_change", 0.15, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "kcal_targ_change", -0.26, value)) %>%
mutate(sign = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "kcal_targ_change", 0, sign)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "pdty_crop_change", 0.331, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "food_waste", 0.021, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "pdty_live_change", 0.0, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "density_change", 0.0, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Export_quantity_change", 0.0, value)) %>%
mutate(sign = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Import_quantity_change", 1, sign)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Import_quantity_change", 1.778, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "pa", 0.1 , value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Expansion_change", -0.5, value)) %>%
mutate(sign = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Expansion_change", 0, sign)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "Affor", 28.5373, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "share_irr_final", 0.2, value)) %>%
mutate(value = if_else(ALPHA3 == "IND" & Pathway == "FSDP" & variable == "share_agrprac_final", 0.0, value))
# Define the order of Pathway levels
pathway_order <- c("CurrentTrend", "NationalCommitments", "GlobalSustainability", "FSDP")
data_SOFA <- data_SOFA %>%
filter(ALPHA3 %in% c("AUS", "BRA", "COL", "ETH", "IND", "UK"))
conflicted::conflicts_prefer(dplyr::filter)
p_final_SOFA <-  ggplot(data_SOFA, aes(y = value, x = reorder(Pathway, -as.numeric(factor(Pathway, levels = pathway_order))), group = ALPHA3, fill = sign)) +
geom_col(position = "dodge", show.legend = FALSE)+
ylab("Relative change between 2020 and 2050 (2020=0)")+
coord_flip()+
scale_x_discrete(labels = c(GlobalSustainability = "GS",
NationalCommitments = "NC",
CurrentTrend = "CT",
FSDP ="FSDP"))+
scale_y_continuous(n.breaks = 3)+
geom_hline(yintercept = 0, linetype = "dashed")+
facet_grid(ALPHA3~variable,
switch = "y",
labeller = labeller(variable = var.labs),
drop = T,
space = "fixed",
scale = "free")+
#theme_light()+
theme(
panel.background = element_rect(fill = '#F2F2F2'),
panel.grid  = element_blank(),
strip.placement = "outside",
#axis.title.x = element_text("2050 compared to 2015 (2015=1)"),
# axis.text.x = element_blank(),
# axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.background=element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.spacing.x = unit(0.75, "lines"),
strip.text.y.left = element_text(angle = 0),
axis.text = element_text(size = 13),
axis.title.x = element_text(size = 15),
axis.line.x = element_line())
p_final_SOFA
data_SOFA <- data_SOFA %>%
filter(ALPHA3 %in% c("AUS", "BRA", "COL", "ETH", "IND", "UK"))
p_final_SOFA <-  ggplot(data_SOFA, aes(y = value, x = reorder(Pathway, -as.numeric(factor(Pathway, levels = pathway_order))), group = ALPHA3, fill = sign)) +
geom_col(position = "dodge", show.legend = FALSE)+
ylab("Relative change between 2020 and 2050 (2020=0)")+
coord_flip()+
scale_x_discrete(labels = c(GlobalSustainability = "GS",
NationalCommitments = "NC",
CurrentTrend = "CT",
FSDP ="FSDP"))+
scale_y_continuous(n.breaks = 3)+
geom_hline(yintercept = 0, linetype = "dashed")+
facet_grid(ALPHA3~variable,
switch = "y",
labeller = labeller(variable = var.labs),
drop = T,
space = "fixed",
scale = "free")+
#theme_light()+
theme(
panel.background = element_rect(fill = '#F2F2F2'),
panel.grid  = element_blank(),
strip.placement = "outside",
#axis.title.x = element_text("2050 compared to 2015 (2015=1)"),
# axis.text.x = element_blank(),
# axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.background=element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.spacing.x = unit(0.75, "lines"),
strip.text.y.left = element_text(angle = 0),
axis.text = element_text(size = 13),
axis.title.x = element_text(size = 15),
axis.line.x = element_line())
p_final_SOFA
tiff(here("output", "figures", paste0(gsub("-", "",Sys.Date()), "_", "ScenarioAssumptionSOFA.tiff")),
units = "in", height = 10, width = 20, res = 300)
plot(p_final_SOFA)
dev.off()
