#                       ifelse(ALPHA3 == "CSA", "R_CSA",
#                              ifelse(ALPHA3 == "NEU", "R_NEU",
#                                     ifelse(ALPHA3 == "OEU", "R_OEU",
#                                            ifelse(ALPHA3 == "SSA", "R_SSA",
#                                                   ifelse(ALPHA3 == "NMC", "R_NMC", ALPHA3)))))))
# Protected Areas -----------------------------------------------------------
#Extracting Total Land
total_land <- df %>%
select(ALPHA3, totalland, year) %>%
dplyr::filter (year==2050)
#Extracting data from the Calculators - only run when needed
#
# db_pa <- data.frame()
#
# for (cur_file in file){
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                      sheet = "SCENARIOS definition",
#                      range = "AA1:ZZ1000")
#   index <- which(data == "TABLE: Patarget_def", arr.ind = TRUE)
#
#   if (plyr::empty(index)) {
#     index <- which(data == "TABLE: PATarget_def", arr.ind = TRUE)
#   }
#
#
#   if(!plyr::empty(index)){
#     data <- data[c(index[1,1]:nrow(data)) + ifelse(grepl("ETH", cur_file), 8,
#                                                   ifelse(grepl("CAN", cur_file), 8, 9)),
#                  c(index[1,2]:(index[1,2]+8))]
#     colnames(data) <- data[1,]
#     data <- data[-1,]
#     data <- data.frame(data[rowSums(is.na(data)) != ncol(data), ])
#
#     data <- data %>%
#       slice(which(Year %in% c(2020, 2050))) %>%
#       rename_all(.funs = tolower) %>%
#       select(lcagg, year, paareatarget) %>%
#       mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                              str_sub(cur_file, 40, 42),
#                              ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                     str_sub(cur_file, 47, 49)))) %>%
#       mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "R_ASP",
#                              ifelse(ALPHA3 == "R_C", "R_CSA",
#                                     ifelse(ALPHA3 == "R_N", "R_NEU",
#                                            ifelse(ALPHA3 == "R_O", "R_OEU",
#                                                   ifelse(ALPHA3 == "R_S", "R_SSA",
#                                                          ifelse(ALPHA3 == "RME", "R_NMC", ALPHA3))))))) %>%
#       mutate(Pathway = ifelse(grepl("Current", cur_file),
#                               "CurrentTrend",
#                               ifelse(grepl("National", cur_file),
#                                      "NationalCommitments",
#                                      "GlobalSustainability"))) %>%
#       unique()
#   }
#   db_pa <- db_pa %>%
#     rbind.data.frame(data)
#   # %>%
#   #   mutate(ALPHA3 = gsub("_", "", ALPHA3))
#
# }
#
# write.xlsx(db_pa %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedPA.xlsx")), row.names = F)
### Manually added values for MEX and SWE
db_pa <- readxl::read_excel(here("data", "extracted_scenathon", "20240427_ExtractedPA.xlsx"))
db_change_pa <- db_pa %>%
mutate(paareatarget = as.numeric(paareatarget)) %>%
dplyr::filter(year==2050) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(Total_PA = sum(paareatarget, na.rm = TRUE)) %>%
ungroup() %>%
select(-lcagg, -paareatarget, -year) %>%
distinct() %>%
left_join(total_land, relationship = "many-to-many") %>%
mutate(pa = round(as.numeric(Total_PA) / as.numeric(totalland), 3)) %>%
select(-Total_PA, -totalland, -year ) %>%
unique()
# db_change_pa <- db_pa %>%
#   group_by(ALPHA3, Pathway) %>%
#   mutate(pa = round((as.numeric(Total_PA[year == "2050"]) - as.numeric(Total_PA[year == "2020"])) / as.numeric(Total_PA[year == "2020"]), digits = 2)) %>%
#   select(-year, -Total_PA) %>%
#   unique() %>%
#   mutate(pa = ifelse(pa > 2.5 , 2.5, pa))
#Extracting data from the Calculators - only run when needed
# db_irr <- data.frame()
#
# for (cur_file in file){
#   #???print(cur_file)
#   #???Extract the right sheet from calculators
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                      sheet = "3_calc_crops",
#                      range = "G28:AE798")
#   # if(grepl("SWE", cur_file)){
#   # data <- read_excel(here("data", "Calcs", cur_file),
#   #                      sheet = "2_calc_livestock",
#   #                      range = "BH31:BU75")
#   # }
#
#   data <- data %>%
#     slice(which(YEAR %in% c(2020, 2050))) %>%
#     select(YEAR, CROP, Harvarea, IrrHarvArea) %>%
#     mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                            str_sub(cur_file, 40, 42),
#                            ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                   str_sub(cur_file, 47, 49)))) %>%
#     mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "R_ASP",
#                            ifelse(ALPHA3 == "R_C", "R_CSA",
#                                   ifelse(ALPHA3 == "R_N", "R_NEU",
#                                          ifelse(ALPHA3 == "R_O", "R_OEU",
#                                                 ifelse(ALPHA3 == "R_S", "R_SSA",
#                                                        ifelse(ALPHA3 == "RME", "R_NMC", ALPHA3))))))) %>%
#     mutate(Pathway = ifelse(grepl("Current", cur_file),
#                             "CurrentTrend",
#                             ifelse(grepl("National", cur_file),
#                                    "NationalCommitments",
#                                    "GlobalSustainability"))) %>%
#     unique()
#
#   db_irr <- db_irr %>%
#     rbind.data.frame(data) %>%
#     data.frame()
# }
#
# write.xlsx(db_irr %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedIrr.xlsx")), row.names = F)
db_irr <- readxl::read_excel(here("data", "extracted_scenathon", "20240507_ExtractedIrr.xlsx")) %>%
dplyr::filter(YEAR == 2050)
options(scipen = 999)
db_change_irr <- db_irr %>%
group_by(ALPHA3, Pathway) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway) %>%
mutate(share_irr = (IrrHarvArea / Harvarea) *Harvarea_per_crop) %>%
mutate(share_irr_final = round(sum(share_irr, na.rm = TRUE), 2)) %>%
ungroup() %>%
select(ALPHA3, YEAR, Pathway, share_irr_final) %>%
unique() %>%
select(-YEAR)
# db_agrprac <- data.frame()
#
# for (cur_file in file){
#   #???print(cur_file)
#   #???Extract the right sheet from calculators
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                      sheet = "3_calc_crops",
#                      range = "G28:AE798")
#   # if(grepl("SWE", cur_file)){
#   # data <- read_excel(here("data", "Calcs", cur_file),
#   #                      sheet = "2_calc_livestock",
#   #                      range = "BH31:BU75")
#   # }
#
#   data <- data %>%
#     slice(which(YEAR %in% c(2020, 2050))) %>%
#     select(YEAR, CROP, SPAMgroup, Harvarea, AreaAgroeco) %>%
#     mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                            str_sub(cur_file, 40, 42),
#                            ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                   str_sub(cur_file, 47, 49)))) %>%
#     mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "R_ASP",
#                            ifelse(ALPHA3 == "R_C", "R_CSA",
#                                   ifelse(ALPHA3 == "R_N", "R_NEU",
#                                          ifelse(ALPHA3 == "R_O", "R_OEU",
#                                                 ifelse(ALPHA3 == "R_S", "R_SSA",
#                                                        ifelse(ALPHA3 == "RME", "R_NMC", ALPHA3))))))) %>%
#     mutate(Pathway = ifelse(grepl("Current", cur_file),
#                             "CurrentTrend",
#                             ifelse(grepl("National", cur_file),
#                                    "NationalCommitments",
#                                    "GlobalSustainability"))) %>%
#     unique()
#
#   db_agrprac <- db_agrprac %>%
#     rbind.data.frame(data) %>%
#     data.frame()
# }
#
# write.xlsx(db_agrprac %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedAgrprac.xlsx")), row.names = F)
db_agrprac <- readxl::read_excel(here("data", "extracted_scenathon", "20240514_ExtractedAgrprac.xlsx")) %>%
dplyr::filter(YEAR == 2050)
options(scipen = 999)
db_change_agrprac <- db_agrprac %>%
group_by(ALPHA3, Pathway) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway) %>%
mutate(share_agrprac = (AreaAgroeco / Harvarea) *Harvarea_per_crop) %>%
mutate(share_agrprac_final = round(sum(share_agrprac, na.rm = TRUE), 2)) %>%
ungroup() %>%
select(ALPHA3, YEAR, Pathway, share_agrprac_final) %>%
unique() %>%
select(-YEAR)
# data final --------------------------------------------------------------
data_final <- df_change %>%
left_join(db_change_crop) %>%
left_join(db_change_Live_Prod) %>%
left_join(db_change_RumDensity) %>%
left_join(product_tot) %>%
left_join(db_change_Expansion) %>%
left_join(db_change_afforestation) %>%
left_join(db_change_foodwaste) %>%
left_join(db_change_pa) %>%
left_join(db_change_irr) %>%
left_join(db_change_agrprac) %>%
dplyr::filter(ALPHA3 != "WORLD")
# %>%
# mutate(ALPHA3 = ifelse(ALPHA3 == "RMECAS", "NMC", ALPHA3))
# %>%
#   mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 5, str_sub(ALPHA3, 3, 5), ALPHA3))
data_final_FABLE <- data_final %>%
#slice(which(!(ALPHA3 %in% c("ASP", "NEU", "NMC", "ROEU", "SSA", "CSA")))) %>%
data.frame()
#
#
#
#
#
# # Select variables for normalization
# selected_vars <- c("Population_change", "kcal_targ_change", "pdty_crop_change", "pdty_live_change",
#                    "density_change", "Expansion_change", "Export_quantity_change", "Import_quantity_change",
#                    "Foodwaste_change"
#                    # , "Affor", "pa"
#                    )
#
# data_final_FABLE_k <- data_final_FABLE %>%
#   group_by(ALPHA3) %>%
#   mutate(across(all_of(selected_vars), ~ mean(., na.rm = TRUE))) %>%
#   ungroup()
#
# # Normalize variables
# normalized_data <- scale(data_final_FABLE_k[selected_vars])
#
# # Replace missing values with the mean of each variable
# normalized_data <- na.aggregate(normalized_data, FUN = mean)
#
# #Veryfying which is the best number of cluster
# # fviz_nbclust(normalized_data, kmeans, method = "wss")
# # fviz_nbclust(normalized_data, kmeans, method = "silhouette")
#
#
#
# # number of clusters
# k <- 5
#
# set.seed(234)
#
# # Perform k-means clustering
# cluster_results <- kmeans(normalized_data, centers = k)
# fviz_cluster(cluster_results, data = normalized_data)
# Compute cluster centers
# cluster_centers <- cluster_results$centers
# # Calculate variability of each variable across clusters
# variability <- apply(cluster_centers, 2, sd)
#
# # Rank variables by variability
# variable_importance <- sort(variability, decreasing = TRUE)
#
# # Print variable importance
# print(variable_importance)
# Add cluster labels to the original data
# data_final_FABLE_k$cluster <- cluster_results$cluster
#
#
# ggplot(data_final_FABLE_k, aes(x = cluster, y =ALPHA3 )) +
#   geom_point() +
#   labs(title = "Cluster - Country CT")
# #Without taking into consideratio the weight of each country
# cluster_summary <- data_final_FABLE_k %>%
#
#
# clusters <- data_final_FABLE_k %>%
#   select(ALPHA3, cluster) %>%
#   unique()
#
#
# data_final_FABLE <- data_final_FABLE %>%
#   left_join(clusters, by="ALPHA3") %>%
#   group_by(cluster, Pathway) %>%
#   mutate(across(all_of(selected_vars), mean, na.rm = TRUE)) %>%
#   ungroup() %>%
#   select(-cluster)
#
# #
# #BOX PLOTS
# data_final_FABLE_box <- data_final_FABLE %>%
#   left_join(clusters, by="ALPHA3") %>%
#   select(-Pathway, -ALPHA3)
#
# # Define the variables of interest
# variables <- c("Population_change", "kcal_targ_change", "pdty_crop_change", "pdty_live_change",
#                "density_change", "Expansion_change", "Export_quantity_change", "Import_quantity_change",
#                "Foodwaste_change")
#
# # Reshape the data from wide to long format
# data_long <- tidyr::pivot_longer(data_final_FABLE_box, cols = variables, names_to = "variable", values_to = "value")
#
# # Create boxplots for each variable, faceted by cluster
# ggplot(data_long, aes(x = factor(cluster), y = value)) +
#   geom_boxplot() +
#   facet_wrap(~variable, scales = "free_y", ncol = 3) +
#   labs(title = "Boxplots of variables by clluster") +
#   theme_minimal()
#
melted <- melt(data_final_FABLE, id.vars = c("ALPHA3", "Pathway", "afforestation", "agricultural_land_expansion"))
melted$value <- ifelse(melted$variable == "pa", melted$value,
ifelse(melted$variable == "share_irr_final", melted$value,
ifelse(melted$variable == "share_agrprac_final", melted$value,
ifelse(melted$variable == "Foodwaste_change", melted$value,
ifelse(
melted$value!= "NaN" & melted$variable != "Affor",
melted$value-1,
ifelse(melted$variable == "Affor",
melted$value,
NA))))))
melted$sign <- ifelse(melted$value < 0,
0,
1)
complete_data <- melted %>%
select(-afforestation, -agricultural_land_expansion)
var.labs <- c(
Population_change = "Population",
kcal_targ_change = "Calories \nper Capita",
pdty_crop_change = "Crops \nProductivity",
pdty_live_change = "Livestock \nProductivity",
density_change = "Ruminant \nDensity ",
Expansion_change ="Agricultural \nexpansion \n(i)",
Export_quantity_change = "Exports \n(kcal)",
Import_quantity_change = "Imports \n(kcal)",
Foodwaste_change = "Share of \n Food Waste \n(iii)",
Affor = "Afforestation \n(Mha) \n(ii)",
pa= "Protected \n Areas \n(iv)",
share_irr_final= "Irrigated \nArea\n(v)",
share_agrprac_final= "Area under \nAgricological \nPractises\n(v)"
)
complete_data$Pathway <- factor(as.character(complete_data$Pathway), levels = c("GlobalSustainability", "NationalCommitments", "CurrentTrend"))
complete_data <- complete_data %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "GBR",
"UK",
ALPHA3))
complete_data$ALPHA3 <- gsub("^R_", "", complete_data$ALPHA3)
complete_data$ALPHA3 <- factor(as.character(complete_data$ALPHA3), levels = c("ARG", "AUS", "BRA", "CAN",
"CHN", "COL", "DEU", "DNK","ETH",
"FIN", "GRC","IDN", 'IND',
"MEX", "NPL", "NOR", "RUS",
"RWA", "SWE", "TUR", "UK", "USA",
"ASP", "CSA", "NEU", "NMC",
"OEU", "SSA"))
# Define the order of Pathway levels
pathway_order <- c("CurrentTrend", "NationalCommitments", "GlobalSustainability")
p_final <- ggplot(complete_data, aes(y = value, x = reorder(Pathway, -as.numeric(factor(Pathway, levels = pathway_order))), group = ALPHA3, fill = sign)) +
geom_col(position = "dodge", show.legend = FALSE)+
ylab("Relative change between 2020 and 2050 (2020=0)")+
coord_flip()+
scale_x_discrete(labels = c(GlobalSustainability = "GS",
NationalCommitments = "NC",
CurrentTrend ="CT"))+
scale_y_continuous(n.breaks = 3)+
geom_hline(yintercept = 0, linetype = "dashed")+
facet_grid(ALPHA3~variable,
switch = "y",
labeller = labeller(variable = var.labs),
drop = T,
space = "fixed",
scale = "free")+
theme(
panel.background = element_rect(fill = '#F2F2F2'),
panel.grid  = element_blank(),
strip.placement = "outside",
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.background=element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 10),
strip.text = element_text(size = 10, face = "bold"),
panel.spacing.x = unit(0.75, "lines"),
plot.caption = element_text(size = 12),
strip.text.y.left = element_text(angle = 0),
axis.text = element_text(size = 6),
axis.title.x = element_text(size = 14),
axis.line.x = element_line()
)
tiff(here("output", "figures", paste0(gsub("-", "",Sys.Date()), "_", "ScenarioAssumptionScenathon.tiff")),
units = "in", height = 9, width = 18, res = 300)
plot(p_final)
dev.off()
tiff(here("output", "figures", paste0(gsub("-", "",Sys.Date()), "_", "ScenarioAssumptionScenathon.tiff")),
units = "in", height = 14, width = 18, res = 300)
plot(p_final)
dev.off()
p_final <- ggplot(complete_data, aes(y = value, x = reorder(Pathway, -as.numeric(factor(Pathway, levels = pathway_order))), group = ALPHA3, fill = sign)) +
geom_col(position = "dodge", show.legend = FALSE)+
ylab("Relative change between 2020 and 2050 (2020=0)")+
coord_flip()+
scale_x_discrete(labels = c(GlobalSustainability = "GS",
NationalCommitments = "NC",
CurrentTrend ="CT"))+
scale_y_continuous(n.breaks = 3)+
geom_hline(yintercept = 0, linetype = "dashed")+
facet_grid(ALPHA3~variable,
switch = "y",
labeller = labeller(variable = var.labs),
drop = T,
space = "fixed",
scale = "free")+
theme(
panel.background = element_rect(fill = '#F2F2F2'),
panel.grid  = element_blank(),
strip.placement = "outside",
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.background=element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 10),
strip.text = element_text(size = 10, face = "bold"),
panel.spacing.x = unit(0.75, "lines"),
plot.caption = element_text(size = 12),
strip.text.y.left = element_text(angle = 0),
axis.text = element_text(size = 8),
axis.title.x = element_text(size = 14),
axis.line.x = element_line()
)
width = 14
height = 30
print(p_final)
tiff(here("output", "figures", paste0(gsub("-", "",Sys.Date()), "_", "ScenarioAssumptionScenathon.tiff")),
units = "in", height = 14, width = 18, res = 300)
plot(p_final)
dev.off()
p_final <- ggplot(complete_data, aes(y = value, x = reorder(Pathway, -as.numeric(factor(Pathway, levels = pathway_order))), group = ALPHA3, fill = sign)) +
geom_col(position = "dodge", show.legend = FALSE)+
ylab("Relative change between 2020 and 2050 (2020=0)")+
coord_flip()+
scale_x_discrete(labels = c(GlobalSustainability = "GS",
NationalCommitments = "NC",
CurrentTrend ="CT"))+
scale_y_continuous(n.breaks = 3)+
geom_hline(yintercept = 0, linetype = "dashed")+
facet_grid(ALPHA3~variable,
switch = "y",
labeller = labeller(variable = var.labs),
drop = T,
space = "fixed",
scale = "free")+
theme(
panel.background = element_rect(fill = '#F2F2F2'),
panel.grid  = element_blank(),
strip.placement = "outside",
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.background=element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
panel.spacing.x = unit(0.75, "lines"),
plot.caption = element_text(size = 14),
strip.text.y.left = element_text(angle = 0),
axis.text = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.line.x = element_line()
)
tiff(here("output", "figures", paste0(gsub("-", "",Sys.Date()), "_", "ScenarioAssumptionScenathon.tiff")),
units = "in", height = 14, width = 18, res = 300)
plot(p_final)
dev.off()
tiff(here("output", "figures", paste0(gsub("-", "",Sys.Date()), "_", "ScenarioAssumptionScenathon.tiff")),
units = "in", height = 13, width = 17, res = 300)
plot(p_final)
dev.off()
p_final <- ggplot(complete_data, aes(y = value, x = reorder(Pathway, -as.numeric(factor(Pathway, levels = pathway_order))), group = ALPHA3, fill = sign)) +
geom_col(position = "dodge", show.legend = FALSE)+
ylab("Relative change between 2020 and 2050 (2020=0)")+
coord_flip()+
scale_x_discrete(labels = c(GlobalSustainability = "GS",
NationalCommitments = "NC",
CurrentTrend ="CT"))+
scale_y_continuous(n.breaks = 3)+
geom_hline(yintercept = 0, linetype = "dashed")+
facet_grid(ALPHA3~variable,
switch = "y",
labeller = labeller(variable = var.labs),
drop = T,
space = "fixed",
scale = "free")+
theme(
panel.background = element_rect(fill = '#F2F2F2'),
panel.grid  = element_blank(),
strip.placement = "outside",
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.background=element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
panel.spacing.x = unit(0.75, "lines"),
plot.caption = element_text(size = 14),
strip.text.y.left = element_text(angle = 0),
axis.text = element_text(size = 10),
axis.title.x = element_text(size = 20),
axis.line.x = element_line()
)
width = 14
height = 30
print(p_final)
tiff(here("output", "figures", paste0(gsub("-", "",Sys.Date()), "_", "ScenarioAssumptionScenathon.tiff")),
units = "in", height = 14, width = 18, res = 300)
plot(p_final)
dev.off()
