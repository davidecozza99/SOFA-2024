#                      sheet = "2_calc_livestock",
#                      range = "BH31:BU75")
# }
data <- data %>%
slice(which(YEAR %in% c(2020, 2050))) %>%
select(YEAR, CROP, Harvarea, Pdty) %>%
mutate(Pathway = ifelse(grepl("affor", cur_file),
"GS_affor",
ifelse(grepl("diet", cur_file),
"GS_diet",
ifelse(grepl("liverum", cur_file),
"GS_live_rum",
ifelse(grepl("agrexp", cur_file),
"GS_agrexp",
ifelse(grepl("crop", cur_file),
"GS_crop",
ifelse(grepl("popurban", cur_file),
"GS_pop_urban",
ifelse(grepl("pop", cur_file),
"GS_pop",
"GS_foodwaste")))))))) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file), "AUS",
ifelse(grepl("BRA", cur_file), "BRA",
ifelse(grepl("COL", cur_file), "COL",
ifelse(grepl("ETH", cur_file), "ETH",
ifelse(grepl("GBR", cur_file), "GBR", ALPHA3)))))) %>%
unique()
db_full_crop <- db_full_crop %>%
rbind.data.frame(data) %>%
data.frame()
}
db_full_crop <- data.frame()
for (cur_file in file){
#???print(cur_file)
#???Extract the right sheet from calculators
data <- read_excel(here("data", "SOFA extraction", cur_file),
sheet = "3_calc_crops",
range = "G28:AE798")
# if(grepl("SWE", cur_file)){
# data <- read_excel(here("data", "Calcs", cur_file),
#                      sheet = "2_calc_livestock",
#                      range = "BH31:BU75")
# }
data <- data %>%
slice(which(YEAR %in% c(2020, 2050))) %>%
select(YEAR, CROP, Harvarea, Pdty) %>%
mutate(Pathway = ifelse(grepl("affor", cur_file),
"GS_affor",
ifelse(grepl("diet", cur_file),
"GS_diet",
ifelse(grepl("liverum", cur_file),
"GS_live_rum",
ifelse(grepl("agrexp", cur_file),
"GS_agrexp",
ifelse(grepl("crop", cur_file),
"GS_crop",
ifelse(grepl("popurban", cur_file),
"GS_pop_urban",
ifelse(grepl("pop", cur_file),
"GS_pop",
"GS_foodwaste")))))))) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file), "AUS",
ifelse(grepl("BRA", cur_file), "BRA",
ifelse(grepl("COL", cur_file), "COL",
ifelse(grepl("ETH", cur_file), "ETH",
ifelse(grepl("GBR", cur_file), "GBR", ALPHA3)))))) %>%
unique()
db_full_crop <- db_full_crop %>%
rbind.data.frame(data) %>%
data.frame()
}
View(db_full_crop)
write.xlsx(db_full_crop, file = here("data", "extracted", paste0(gsub("-", "",Sys.Date()), "_SOFAPathways_crop.xlsx")), row.names = F)
db_full_crop <- readxl::read_excel(here("data", "extracted_scenathon", "20240423_SOFAPathways_live.xlsx.xlsx"))
db_full_crop <- readxl::read_excel(here("data", "extracted_scenathon", "20240423_SOFAPathways_crop.xlsx"))
db_full_crop <- readxl::read_excel(here("data", "extracted_scenathon", "20240423_SOFAPathways_crop.xlsx"))
db_full_crop <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_crop.xlsx"))
db_full_crop_agg <- db_full_crop %>%
#Use harvested area as weight
mutate(weight_pdty = Harvarea*Pdty) %>%
group_by(ALPHA3, Pathway, YEAR) %>%
dplyr::summarise(weight_pdty = sum(weight_pdty, na.rm = T),
Harvarea = sum(Harvarea, na.rm = T)) %>%
#weighted average
mutate(pdty = weight_pdty/Harvarea)
db_change_crop <- db_full_crop_agg %>%
mutate(var_pivot = paste0("pdty_", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, pdty) %>%
pivot_wider(names_from = var_pivot,
values_from = c(pdty)) %>%
#relative change betwwen 2050 and 2015
mutate(pdty_crop_change = round(pdty_2050/pdty_2020, 2)) %>%
select(ALPHA3, Pathway, pdty_crop_change)
db_full_crop <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_crop.xlsx"))
db_full_crop_agg <- db_full_crop %>%
#Use harvested area as weight
mutate(weight_pdty = Harvarea*Pdty) %>%
group_by(ALPHA3, Pathway, YEAR) %>%
dplyr::summarise(weight_pdty = sum(weight_pdty, na.rm = T),
Harvarea = sum(Harvarea, na.rm = T)) %>%
#weighted average
mutate(pdty = weight_pdty/Harvarea)
db_change_crop <- db_full_crop_agg %>%
mutate(var_pivot = paste0("pdty_", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, pdty) %>%
pivot_wider(names_from = var_pivot,
values_from = c(pdty)) %>%
#relative change betwwen 2050 and 2015
mutate(pdty_crop_change = round(pdty_2050/pdty_2020, 2)) %>%
select(ALPHA3, Pathway, pdty_crop_change)
View(db_change_crop)
write.xlsx(db_change_crop, file = here("data", "extracted", paste0(gsub("-", "",Sys.Date()), "pdtycrop_change_otherpath.xlsx")), row.names = F)
db_full_waste <- data.frame()
for (cur_file in file){
#???Extract the right sheet from calculators
data <- read_excel(here("data", "Calcs", cur_file),
sheet = "1_calc_human_demand",
range = "A27:AP1116")
if(grepl("DNK|GRC|NPL|R_ASP|R_CSA|R_NEU|R_OEU|R_SSA|RMECAS|TUR", cur_file)){
data <- read_excel(here("data", "Calcs", cur_file),
sheet = "1_calc_human_demand",
range = "A31:AQ1116")
}
data <- data %>%
slice(which(year %in% c(2020, 2050))) %>%
select(year, food_waste, LOSS_SCEN, fproduct, prodgroup) %>%
mutate(Pathway = ifelse(grepl("affor", cur_file),
"GS_affor",
ifelse(grepl("diet", cur_file),
"GS_diet",
ifelse(grepl("liverum", cur_file),
"GS_live_rum",
ifelse(grepl("agrexp", cur_file),
"GS_agrexp",
ifelse(grepl("crop", cur_file),
"GS_crop",
ifelse(grepl("popurban", cur_file),
"GS_pop_urban",
ifelse(grepl("pop", cur_file),
"GS_pop",
"GS_foodwaste")))))))) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file), "AUS",
ifelse(grepl("BRA", cur_file), "BRA",
ifelse(grepl("COL", cur_file), "COL",
ifelse(grepl("ETH", cur_file), "ETH",
ifelse(grepl("GBR", cur_file), "GBR", ALPHA3)))))) %>%
unique()
db_full_waste <- db_full_waste %>%
rbind.data.frame(data)
}
#???Extract the right sheet from calculators
data <- read_excel(here("data", "SOFA extraction", cur_file),
sheet = "1_calc_human_demand",
range = "A27:AP1116")
db_full_waste <- data.frame()
for (cur_file in file){
#???Extract the right sheet from calculators
data <- read_excel(here("data", "SOFA extraction", cur_file),
sheet = "1_calc_human_demand",
range = "A27:AP1116")
if(grepl("DNK|GRC|NPL|R_ASP|R_CSA|R_NEU|R_OEU|R_SSA|RMECAS|TUR", cur_file)){
data <- read_excel(here("data", "Calcs", cur_file),
sheet = "1_calc_human_demand",
range = "A31:AQ1116")
}
data <- data %>%
slice(which(year %in% c(2020, 2050))) %>%
select(year, food_waste, LOSS_SCEN, fproduct, prodgroup) %>%
mutate(Pathway = ifelse(grepl("affor", cur_file),
"GS_affor",
ifelse(grepl("diet", cur_file),
"GS_diet",
ifelse(grepl("liverum", cur_file),
"GS_live_rum",
ifelse(grepl("agrexp", cur_file),
"GS_agrexp",
ifelse(grepl("crop", cur_file),
"GS_crop",
ifelse(grepl("popurban", cur_file),
"GS_pop_urban",
ifelse(grepl("pop", cur_file),
"GS_pop",
"GS_foodwaste")))))))) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file), "AUS",
ifelse(grepl("BRA", cur_file), "BRA",
ifelse(grepl("COL", cur_file), "COL",
ifelse(grepl("ETH", cur_file), "ETH",
ifelse(grepl("GBR", cur_file), "GBR", ALPHA3)))))) %>%
unique()
db_full_waste <- db_full_waste %>%
rbind.data.frame(data)
}
View(db_full_waste)
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
write.xlsx(db_full_waste, file = here("data", "extracted", paste0(gsub("-", "",Sys.Date()), "_SOFAPathways_foodwaste.xlsx")), row.names = F)
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
mapping_fao_fbs <- read_excel(here("data", "FAO_product_maps_2023_ML.xlsx")) %>%
rename(Product = Fable_frpoduct) %>%
mutate(Product = tolower(Product)) %>%
select(-FAO_ItemCode, -`SLORD GROUP Matched`)
View(db_full_waste)
mapping_fao_fbs <- read_excel(here("data", "FAO_product_maps_2023_ML.xlsx")) %>%
rename(FPRODUCT = Fable_frpoduct) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
select(-FAO_ItemCode, -`SLORD GROUP Matched`)
View(mapping_fao_fbs)
db_full_waste <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs)
View(db_full_waste)
db_full_waste <- data.frame()
for (cur_file in file){
#???Extract the right sheet from calculators
data <- read_excel(here("data", "SOFA extraction", cur_file),
sheet = "1_calc_human_demand",
range = "A27:AP1116")
if(grepl("DNK|GRC|NPL|R_ASP|R_CSA|R_NEU|R_OEU|R_SSA|RMECAS|TUR", cur_file)){
data <- read_excel(here("data", "Calcs", cur_file),
sheet = "1_calc_human_demand",
range = "A31:AQ1116")
}
data <- data %>%
select(year, food_waste, LOSS_SCEN, fproduct, prodgroup) %>%
mutate(Pathway = ifelse(grepl("affor", cur_file),
"GS_affor",
ifelse(grepl("diet", cur_file),
"GS_diet",
ifelse(grepl("liverum", cur_file),
"GS_live_rum",
ifelse(grepl("agrexp", cur_file),
"GS_agrexp",
ifelse(grepl("crop", cur_file),
"GS_crop",
ifelse(grepl("popurban", cur_file),
"GS_pop_urban",
ifelse(grepl("pop", cur_file),
"GS_pop",
"GS_foodwaste")))))))) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file), "AUS",
ifelse(grepl("BRA", cur_file), "BRA",
ifelse(grepl("COL", cur_file), "COL",
ifelse(grepl("ETH", cur_file), "ETH",
ifelse(grepl("GBR", cur_file), "GBR", ALPHA3)))))) %>%
unique()
db_full_waste <- db_full_waste %>%
rbind.data.frame(data)
}
db_full_waste <- data.frame()
for (cur_file in file){
#???Extract the right sheet from calculators
data <- read_excel(here("data", "SOFA extraction", cur_file),
sheet = "1_calc_human_demand",
range = "A27:AP1116")
if(grepl("DNK|GRC|NPL|R_ASP|R_CSA|R_NEU|R_OEU|R_SSA|RMECAS|TUR", cur_file)){
data <- read_excel(here("data", "Calcs", cur_file),
sheet = "1_calc_human_demand",
range = "A31:AQ1116")
}
data <- data %>%
select(year, food_waste, LOSS_SCEN, fproduct, prodgroup) %>%
mutate(Pathway = ifelse(grepl("affor", cur_file),
"GS_affor",
ifelse(grepl("diet", cur_file),
"GS_diet",
ifelse(grepl("liverum", cur_file),
"GS_live_rum",
ifelse(grepl("agrexp", cur_file),
"GS_agrexp",
ifelse(grepl("crop", cur_file),
"GS_crop",
ifelse(grepl("popurban", cur_file),
"GS_pop_urban",
ifelse(grepl("pop", cur_file),
"GS_pop",
"GS_foodwaste")))))))) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file), "AUS",
ifelse(grepl("BRA", cur_file), "BRA",
ifelse(grepl("COL", cur_file), "COL",
ifelse(grepl("ETH", cur_file), "ETH",
ifelse(grepl("GBR", cur_file), "GBR", ALPHA3)))))) %>%
unique()
db_full_waste <- db_full_waste %>%
rbind.data.frame(data)
}
write.xlsx(db_full_waste, file = here("data", "extracted", paste0(gsub("-", "",Sys.Date()), "_SOFAPathways_foodwaste.xlsx")), row.names = F)
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
mapping_fao_fbs <- read_excel(here("data", "FAO_product_maps_2023_ML.xlsx")) %>%
rename(FPRODUCT = Fable_frpoduct) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
select(-FAO_ItemCode, -`SLORD GROUP Matched`)
db_full_waste <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs)
View(db_full_waste)
db_full_waste <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs) %>%
select(-prodgroup) %>%
unique()
View(db_full_waste)
db_full_waste <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs) %>%
select(-prodgroup, -LOSS_SCEN) %>%
unique()
View(db_full_waste)
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
mapping_fao_fbs <- read_excel(here("data", "FAO_product_maps_2023_ML.xlsx")) %>%
rename(FPRODUCT = Fable_frpoduct) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
select(-FAO_ItemCode, -`SLORD GROUP Matched`)
db_full_waste <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs) %>%
select(-prodgroup, -LOSS_SCEN) %>%
unique()
View(db_full_waste)
write.xlsx(db_full_waste, file = here("data", "extracted", paste0(gsub("-", "",Sys.Date()), "_SOFAPathways_foodwaste.xlsx")), row.names = F)
db_full_waste <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs) %>%
select(-prodgroup, -LOSS_SCEN) %>%
unique() %>%
filter(!year = c(2020,2005, 2010, 2015))
db_full_waste <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs) %>%
select(-prodgroup, -LOSS_SCEN) %>%
unique() %>%
filter(!year %in% c(2020,2005, 2010, 2015))
db_full_waste <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs) %>%
select(-prodgroup, -LOSS_SCEN) %>%
unique() %>%
dplyr::filter(!year %in% c(2020,2005, 2010, 2015))
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
mapping_fao_fbs <- read_excel(here("data", "FAO_product_maps_2023_ML.xlsx")) %>%
rename(FPRODUCT = Fable_frpoduct) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
select(-FAO_ItemCode, -`SLORD GROUP Matched`)
db_full_waste <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs) %>%
select(-prodgroup, -LOSS_SCEN) %>%
unique() %>%
dplyr::filter(!year %in% c(2020,2005, 2010, 2015))
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
mapping_fao_fbs <- read_excel(here("data", "FAO_product_maps_2023_ML.xlsx")) %>%
rename(FPRODUCT = Fable_frpoduct) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
select(-FAO_ItemCode, -`SLORD GROUP Matched`)
db_full_waste <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs) %>%
select(-LOSS_SCEN) %>%
unique() %>%
dplyr::filter(!year %in% c(2020,2005, 2010, 2015))
View(db_full_waste)
db_full_waste <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs,
relationship = "many-to-many") %>%
select(-LOSS_SCEN) %>%
unique() %>%
dplyr::filter(!year %in% c(2020,2005, 2010, 2015))
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx"))
View(db_full_waste)
db_full_waste <- data.frame()
for (cur_file in file){
#???Extract the right sheet from calculators
data <- read_excel(here("data", "SOFA extraction", cur_file),
sheet = "1_calc_human_demand",
range = "A27:AP1116")
if(grepl("DNK|GRC|NPL|R_ASP|R_CSA|R_NEU|R_OEU|R_SSA|RMECAS|TUR", cur_file)){
data <- read_excel(here("data", "Calcs", cur_file),
sheet = "1_calc_human_demand",
range = "A31:AQ1116")
}
data <- data %>%
select(year, food_waste, LOSS_SCEN, fproduct, prodgroup) %>%
mutate(Pathway = ifelse(grepl("affor", cur_file),
"GS_affor",
ifelse(grepl("diet", cur_file),
"GS_diet",
ifelse(grepl("liverum", cur_file),
"GS_live_rum",
ifelse(grepl("agrexp", cur_file),
"GS_agrexp",
ifelse(grepl("crop", cur_file),
"GS_crop",
ifelse(grepl("popurban", cur_file),
"GS_pop_urban",
ifelse(grepl("pop", cur_file),
"GS_pop",
"GS_foodwaste")))))))) %>%
mutate(ALPHA3 = ifelse(grepl("AUS", cur_file), "AUS",
ifelse(grepl("BRA", cur_file), "BRA",
ifelse(grepl("COL", cur_file), "COL",
ifelse(grepl("ETH", cur_file), "ETH",
ifelse(grepl("GBR", cur_file), "GBR", ALPHA3)))))) %>%
unique()
db_full_waste <- db_full_waste %>%
rbind.data.frame(data)
}
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
write.xlsx(db_full_waste, file = here("data", "extracted", paste0(gsub("-", "",Sys.Date()), "_SOFAPathways_foodwaste.xlsx")), row.names = F)
write.xlsx(db_full_waste, file = here("data", "extracted", paste0(gsub("-", "",Sys.Date()), "_SOFAPathways_foodwaste.xlsx")), row.names = F)
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
mapping_fao_fbs <- read_excel(here("data", "FAO_product_maps_2023_ML.xlsx")) %>%
rename(FPRODUCT = Fable_frpoduct) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
select(-FAO_ItemCode, -`SLORD GROUP Matched`)
db_full_waste_final <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs,
relationship = "many-to-many") %>%
select(-LOSS_SCEN) %>%
unique() %>%
dplyr::filter(!year %in% c(2020,2005, 2010, 2015))
View(db_full_waste_final)
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
mapping_fao_fbs <- read_excel(here("data", "FAO_product_maps_2023_ML.xlsx")) %>%
rename(FPRODUCT = Fable_frpoduct) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
select(-FAO_ItemCode, -`SLORD GROUP Matched`)
db_full_waste_final <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs,
relationship = "many-to-many") %>%
select(-prodgroup, -LOSS_SCEN) %>%
unique() %>%
dplyr::filter(!year %in% c(2020,2005, 2010, 2015))
View(db_full_waste_final)
db_full_waste_final <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs,
relationship = "many-to-many") %>%
select(-prodgroup, -LOSS_SCEN) %>%
unique() %>%
dplyr::filter(!year %in% c(2020,2005, 2010, 2015))
View(db_full_waste_final)
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
mapping_fao_fbs <- read_excel(here("data", "FAO_product_maps_2023_ML.xlsx")) %>%
rename(FPRODUCT = Fable_frpoduct) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
select(-FAO_ItemCode, -`SLORD GROUP Matched`)
db_full_waste_final <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs,
relationship = "many-to-many") %>%
select(-prodgroup, -LOSS_SCEN) %>%
unique() %>%
dplyr::filter(!year %in% c(2000,2005, 2010, 2015))
View(db_full_waste_final)
View(db_full_waste_final)
db_full_waste <- readxl::read_excel(here("data", "extracted", "20240423_SOFAPathways_foodwaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
mapping_fao_fbs <- read_excel(here("data", "FAO_product_maps_2023_ML.xlsx")) %>%
rename(FPRODUCT = Fable_frpoduct) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
select(-FAO_ItemCode, -`SLORD GROUP Matched`)
db_full_waste_final <- db_full_waste %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(mapping_fao_fbs,
relationship = "many-to-many") %>%
select(-prodgroup, -LOSS_SCEN) %>%
unique() %>%
dplyr::filter(!year %in% c(2000,2005, 2010, 2015)) %>%
select(ALPHA3, Pathway, year, FPRODUCT, `FAO FBS`, food_waste)
View(db_full_waste_final)
write.xlsx(db_full_waste_final, file = here("data", "extracted", paste0(gsub("-", "",Sys.Date()), "_SOFAPathways_foodwaste.xlsx")), row.names = F)
