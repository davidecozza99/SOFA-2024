db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea))
View(db_shareirr)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea, na.rm = TRUE)
View(db_shareirr)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = (Harvarea / total_harvarea), na.rm = TRUE)
View(db_shareirr)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea)
View(db_shareirr)
options(scipen = 0)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea)
View(db_shareirr)
options(scipen = 999)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea)
View(db_shareirr)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(share_irr = IrrHarvArea / total_harvarea) %>%
# data final --------------------------------------------------------------
data_final <- df_change %>%
left_join(db_change_crop) %>%
left_join(db_change_Live_Prod) %>%
left_join(db_change_RumDensity) %>%
left_join(product_tot) %>%
left_join(db_change_Expansion) %>%
left_join(db_change_afforestation) %>%
left_join(db_change_foodwaste) %>%
left_join(db_change_pa) %>%
dplyr::filter(ALPHA3 != "WORLD")
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(share_irr = IrrHarvArea / total_harvarea)
View(db_shareirr)
db_irr <- readxl::read_excel(here("data", "extracted_scenathon", "20240507_ExtractedIrr.xlsx"))
options(scipen = 999)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup()
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea
View(db_shareirr)
View(db_shareirr)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea)
View(db_shareirr)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(share_irr = (IrrHarvArea / Harvarea) *Harvarea_per_crop )
View(db_shareirr)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(share_irr = (IrrHarvArea / Harvarea) *Harvarea_per_crop) %>%
mutate(share_irr_final = sum(share_irr))
View(db_shareirr)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(share_irr = (IrrHarvArea / Harvarea) *Harvarea_per_crop) %>%
mutate(share_irr_final = sum(share_irr, na.rm = TRUE)))
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(share_irr = (IrrHarvArea / Harvarea) *Harvarea_per_crop) %>%
mutate(share_irr_final = sum(share_irr, na.rm = TRUE))
View(db_shareirr)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(share_irr = (IrrHarvArea / Harvarea) *Harvarea_per_crop) %>%
mutate(share_irr_final = sum(share_irr, na.rm = TRUE)) %>%
ungroup() %>%
select(-CROP) %>%
unique()
View(db_shareirr)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(share_irr = (IrrHarvArea / Harvarea) *Harvarea_per_crop) %>%
mutate(share_irr_final = sum(share_irr, na.rm = TRUE)) %>%
ungroup() %>%
select(ALPHA3, YEAR, share_irr_final) %>%
unique()
View(db_shareirr)
db_shareirr <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(share_irr = (IrrHarvArea / Harvarea) *Harvarea_per_crop) %>%
mutate(share_irr_final = sum(share_irr, na.rm = TRUE)) %>%
ungroup() %>%
select(ALPHA3, YEAR, Pathway, share_irr_final) %>%
unique()
View(db_shareirr)
## Scenario selection
# libraries ---------------------------------------------------------------
library(here)
#library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(ggplot2)
library(stringr)
library(conflicted)
library(writexl)
library(openxlsx)
library(stats)
library(zoo)
library(cluster)
library(factoextra)
conflicted::conflict_prefer("rename", "dplyr")
conflicted::conflict_prefer("mutate", "dplyr")
conflicted::conflict_prefer("summarise", "dplyr")
here()
# file --------------------------------------------------------------------
file <- list.files(path = here("data", "Calcs_new"))
# data --------------------------------------------------------------------
df <- read.csv(here("data", "240424_FullDataBase.csv"), sep = "") %>%
dplyr::filter(tradeadjustment == "No")
product <- read.csv(here("data",  "240424_FullProductDataBase.csv"),sep = "")  %>%
dplyr::filter(tradeadjustment == "No")
mapping_F6 <- read_excel(here("data",  "DataForFoodFigures.xlsx"),
sheet = "prod groups map")
db_scenarios <- read.csv(here("data", "240424_scenarios.csv")) %>%
select(pathway, country, afforestation,agricultural_land_expansion)%>%
rename(ALPHA3 = country,
Pathway = pathway) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
unique()
fao_prod <- read.csv(here("data", "FAO_FoodBalance.csv"))
fao_prod$Item <- ifelse(fao_prod$Item == "Rice and products", "Rice (Milled Equivalent)",
ifelse(fao_prod$Item == "Groundnuts", "Groundnuts (in Shell Eq)",
ifelse(fao_prod$Item == "Vegetables, other", "Vegetables, Other",
ifelse(fao_prod$Item == "Fruits, other", "Fruits, Other",
ifelse(fao_prod$Item == "Freshwater Fish", "Fish Seafood + (Total)",
ifelse(fao_prod$Item == "Meat, Other", "Meat Other",
ifelse(fao_prod$Item == "Offals, Edible", "Offals Edible",
fao_prod$Item)))))))
# mapping_animalprod <- read.csv(here("data", "FAOSTAT_mapping_animalprod.csv"))
# fao_prod <- fao_prod %>%
#   inner_join(mapping_animalprod, by = "Item")
mapping <- read_excel(here("data",  "mapping_GAMS_FAO_products.xlsx"))
mapping[which(mapping$FAO == "Groundnuts (Shelled Eq)"), "FAO"] <- "Groundnuts"
mapping_country <- read_excel(here("data", "mapping_country_FAO_FABLE.xlsx")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Country_FAO, origin = "country.name", destination = "iso3c"))
mapping_ALPHA3 <- read_excel(here("data",  "mapping_alpha3_Country.xlsx")) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3))
fao_prod$Area <- as.character(fao_prod$Area)
fao_prod[which(fao_prod$Area == "United Kingdom of Great Britain and Northern Ireland"), "Area"] <- "United Kingdom"
product_dt <- left_join(product,
# rename(alpha3 = country) %>%
# mutate(alpha3 = as.character(alpha3)) %>%
# select(#-id,
#   -scenathon_id),
df,
# rename(alpha3 = country) %>%
# select(#-id,
#   -scenathon_id),
by = c("country", "pathway", "year")) %>%
rename(ALPHA3 = country) %>%
mutate(pathway = recode(pathway, "CurrentTrends" = "CurrentTrend")) %>%
left_join(mapping_ALPHA3) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
unique()
##Compute kcal/kg data from FAO 2020
df_fao <- fao_prod %>%
left_join(mapping %>% select(FPRODUCT, FAO) %>% unique(), by = c("Item" = "FAO")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Area, origin = "country.name", destination = "iso3c")) %>%
left_join(mapping_country, by = c("iso3c")) %>%
left_join(mapping_ALPHA3, by = c("Country_FABLE" = "Country")) %>%
mutate(ALPHA3 = ifelse(Country_FABLE == "NPL", "NPL",
ifelse(Country_FABLE == "GRC", "GRC", ALPHA3))) %>%
select(ALPHA3, FPRODUCT, Element, Value)
df <- df %>%
rename(ALPHA3 = country) %>%
rename(Pathway = pathway)
product <- product %>%
rename(ALPHA3 = country)
#Computing Kcal content per Kg
df_fao <- (df_fao %>%
group_by(ALPHA3, FPRODUCT, Element) %>%
dplyr::summarise_at(vars(Value),
sum,
na.rm = T) %>%
pivot_wider(names_from = Element,
values_from = Value) %>%
dplyr::rename(kg = "Food supply quantity (kg/capita/yr)",
kcal = "Food supply (kcal/capita/day)") %>%
mutate(kcal.kg = ifelse(kg!=0,
kcal/kg,
NA)) %>%
# mutate(ALPHA3 = ifelse(ALPHA3 == "NMC", "RMECAS", ALPHA3)) %>%
data.frame())
product_df <- left_join(product_dt, df_fao, by = c("ALPHA3" = "ALPHA3", "product" = "FPRODUCT")) %>%
rename(Pathway = pathway)
#####################
#Computing Population and Kcal target relative change 2020-2050
df_change <- df %>%
slice(which(year %in% c(2020, 2050))) %>%
select(ALPHA3, Pathway, year, population, kcal_targ) %>%
unique() %>%
pivot_wider(names_from = year,
values_from = c(population, kcal_targ)) %>%
mutate(Population_change = round(population_2050/population_2020, 2)) %>%
mutate(kcal_targ_change = round(kcal_targ_2050/kcal_targ_2020,2)) %>%
select(ALPHA3, Pathway, Population_change, kcal_targ_change) %>%
# mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments")) %>%
data.frame() %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "RMECAS", "R_NMC", ALPHA3))
#Computing imports and exports quantity relative changes 2020-2050, using Kcal per Kg to aggregate all products
product_tot <- product_df %>%
slice(which(year %in% c(2020, 2050))) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
mutate(Export_quantity = export_quantity * kcal.kg) %>%
mutate(Import_quantity = import_quantity * kcal.kg) %>%
group_by(ALPHA3, Pathway, year) %>%
dplyr::summarise(Export_quantity = sum(Export_quantity, na.rm = T),
Import_quantity = sum(Import_quantity, na.rm = T)) %>%
select(ALPHA3, Pathway, year,
Export_quantity, Import_quantity) %>%
pivot_wider(names_from = year,
values_from = c(Export_quantity, Import_quantity)) %>%
mutate(Export_quantity_change = round(Export_quantity_2050/Export_quantity_2020, 2)) %>%
mutate(Import_quantity_change = round(Import_quantity_2050/Import_quantity_2020, 2)) %>%
select(ALPHA3, Pathway, Export_quantity_change, Import_quantity_change) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
data.frame() %>%
## manually put lower for NPL because way too high and can't see the others
mutate(Export_quantity_change = ifelse(ALPHA3 == "NPL", 4, Export_quantity_change)) %>%
# mutate(Import_quantity_change = ifelse(ALPHA3 == "ETH", 4, Import_quantity_change)) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments")) %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "ASP", "R_ASP",
ifelse(ALPHA3 == "CSA", "R_CSA",
ifelse(ALPHA3 == "NEU", "R_NEU",
ifelse(ALPHA3 == "OEU", "R_OEU",
ifelse(ALPHA3 == "SSA", "R_SSA",
ifelse(ALPHA3 == "NMC", "R_NMC", ALPHA3)))))))
#                                    "NationalCommitments",
#                                    "GlobalSustainability")))
#
#
#   db_full <- db_full %>%
#     rbind.data.frame(data)
#
#
# }
# write.xlsx(db_full %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedPdtyLivestock.xlsx")), row.names = F)
db_full <- readxl::read_excel(here("data", "extracted_scenathon", "20240425_ExtractedPdtyLivestock.xlsx"))
#Computing Livestock productivity in t/TLU
db_full_agg <- db_full %>%
# use the herd in TLU to later compute a weighted average
mutate(weight_pdty = herd*pdtyanim) %>%
group_by(ALPHA3, Pathway, YEAR) %>%
dplyr::summarise(weight_pdty = sum(weight_pdty, na.rm = T),
herd = sum(herd, na.rm = T)) %>%
#weighted average
mutate(pdty = weight_pdty/herd)
db_change_Live_Prod <- db_full_agg %>%
mutate(var_pivot = paste0("pdty_", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, pdty) %>%
pivot_wider(names_from = var_pivot,
values_from = c(pdty)) %>%
#relative change between 2050 and 2020
mutate(pdty_live_change = round(pdty_2050/pdty_2020, 2)) %>%
select(ALPHA3, Pathway, pdty_live_change) %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "RMECAS", "R_NMC", ALPHA3))
View(db_change_Live_Prod)
View(db_full_agg)
db_shareirr_agg <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(share_irr = (IrrHarvArea / Harvarea) *Harvarea_per_crop) %>%
mutate(share_irr_final = sum(share_irr, na.rm = TRUE)) %>%
ungroup() %>%
select(ALPHA3, YEAR, Pathway, share_irr_final) %>%
unique()
db_change_irr <- db_shareirr_agg %>%
mutate(var_pivot = paste0("share_irr_final", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, share_irr_final) %>%
pivot_wider(names_from = var_pivot,
values_from = c(share_irr_final))
View(db_shareirr)
db_change_irr <- db_shareirr_agg %>%
mutate(var_pivot = paste0("share_irr_final", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, share_irr_final) %>%
pivot_wider(names_from = var_pivot,
values_from = c(share_irr_final))
View(db_shareirr)
db_irr <- readxl::read_excel(here("data", "extracted_scenathon", "20240507_ExtractedIrr.xlsx"))
options(scipen = 999)
db_shareirr_agg <- db_irr %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(total_harvarea = sum(Harvarea, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR, CROP) %>%
mutate(Harvarea_per_crop = Harvarea / total_harvarea) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, YEAR) %>%
mutate(share_irr = (IrrHarvArea / Harvarea) *Harvarea_per_crop) %>%
mutate(share_irr_final = sum(share_irr, na.rm = TRUE)) %>%
ungroup() %>%
select(ALPHA3, YEAR, Pathway, share_irr_final) %>%
unique()
db_change_irr <- db_shareirr_agg %>%
mutate(var_pivot = paste0("share_irr_final", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, share_irr_final) %>%
pivot_wider(names_from = var_pivot,
values_from = c(share_irr_final))
View(db_change_irr)
db_change_irr <- db_shareirr_agg %>%
mutate(var_pivot = paste0("share_irr_final", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, share_irr_final) %>%
pivot_wider(names_from = var_pivot,
values_from = c(share_irr_final)) %>%
mutate(pdty_crop_change = round(share_irr_final_2050/share_irr_final_2020, 2)) %>%
select(ALPHA3, Pathway, pdty_crop_change)
View(db_change_irr)
db_change_irr <- db_shareirr_agg %>%
mutate(var_pivot = paste0("share_irr_final", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, share_irr_final) %>%
pivot_wider(names_from = var_pivot,
values_from = c(share_irr_final)) %>%
mutate(irr_change = round(share_irr_final_2050/share_irr_final_2020, 2)) %>%
select(ALPHA3, Pathway, irr_change)
View(db_change_irr)
db_change_irr <- db_shareirr_agg %>%
mutate(var_pivot = paste0("share_irr_final", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, share_irr_final) %>%
pivot_wider(names_from = var_pivot,
values_from = c(share_irr_final))
View(db_change_irr)
db_change_irr <- db_shareirr_agg %>%
mutate(var_pivot = paste0("share_irr_final_", YEAR)) %>%
select(var_pivot, Pathway, ALPHA3, share_irr_final) %>%
pivot_wider(names_from = var_pivot,
values_from = c(share_irr_final)) %>%
mutate(irr_change = round(share_irr_final_2050/share_irr_final_2020, 2)) %>%
select(ALPHA3, Pathway, irr_change)
View(db_change_irr)
# N
# libraries ---------------------------------------------------------------
library(here)
#library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(ggplot2)
library(stringr)
library(conflicted)
library(writexl)
library(openxlsx)
here()
conflicted::conflict_prefer("rename", "dplyr")
conflicted::conflict_prefer("mutate", "dplyr")
conflicted::conflict_prefer("summarise", "dplyr")
conflicted::conflicts_prefer(dplyr::filter)
aus_data <- read_xlsx(here("data", "report_AUS_20240306_9H01.xlsx"), sheet = "Commodities") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_diet", "GS_affor", "GS_live_rumdensity"))
bra_data <- read_xlsx(here("data", "report_BRA_20240306_10H44.xlsx"), sheet = "Commodities") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_agrexp", "GS_diet", "GS_crop"))
col_data <- read_xlsx(here("data", "report_COL_20240325_15H07.xlsx"), sheet = "Commodities") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_diet", "GS_crop", "GS_pop_urban"))
eth_data <- read_xlsx(here("data", "report_ETH_20240426_12H01.xlsx"), sheet = "Commodities") %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_pop", "GS_agrexp", "GS_crop"))
gbr_data <- read_xlsx(here("data", "report_GBR_20240306_10H43.xlsx"), sheet = "Commodities")  %>%
rename(Pathway = `Current Trend`) %>%
filter(Pathway %in% c("Current Trend_Yes", "NationalCommitments", "GlobalSustainability", "GS_diet", "GS_foodwaste", "GS_crop"))
Map_animals <- read_xlsx(here("data", "Manure", "Map_animals.xlsx"))
all_data <- aus_data %>%
bind_rows(bra_data) %>%
bind_rows(col_data) %>%
bind_rows(eth_data) %>%
bind_rows(gbr_data)
db_herd <- all_data %>%
select(Pathway, Location, Product, Year, Anim_feas) %>%
rename(ANIMAL = Product) %>%
left_join(Map_animals, relationship = "many-to-many") %>%
group_by(Pathway, Location, Year) %>%
rename(TLU = Anim_feas, ALPHA3 = Location) %>%
ungroup() %>%
filter(!is.na(ANIMAL_GLOBIOM)) %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "Australia", "AUS",
ifelse(ALPHA3 == "Brazil", "BRA",
ifelse(ALPHA3 == "Colombia", "COL",
ifelse(ALPHA3 == "Ethiopia", "ETH",
ifelse(ALPHA3 == "UK", "GBR", ALPHA3))))))
db_manure <- read_excel(here("data", "Manure", "Nmanure_GAMS.xlsx"),
sheet = "All_Nmanure_TLU") %>%
filter(!(is.na(ALPHA3))) %>%
pivot_longer(!ALPHA3, values_to = "Nmanure_TLU", names_to = "ANIMAL_GLOBIOM")
View(db_manure)
#Total N inputs from manure in 1000 t N for each year
db_manure_herd <- db_herd %>%
mutate(ANIMAL_GLOBIOM = ifelse(ANIMAL_GLOBIOM == "SGTD", "SGTO", ANIMAL_GLOBIOM)) %>%
left_join(db_manure) %>%
mutate(Nmanure_Anim = Nmanure_TLU*TLU/1000)
View(db_manure_herd)
View(db_manure)
View(db_herd)
db_herd <- all_data %>%
select(Pathway, Location, Product, Year, Anim_feas) %>%
rename(ANIMAL = Product) %>%
left_join(Map_animals, relationship = "many-to-many") %>%
group_by(Pathway, Location, Year) %>%
rename(TLU = Anim_feas, ALPHA3 = Location) %>%
ungroup() %>%
filter(!is.na(ANIMAL_GLOBIOM)) %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "Australia", "AUS",
ifelse(ALPHA3 == "Brazil", "BRA",
ifelse(ALPHA3 == "Colombia", "COL",
ifelse(ALPHA3 == "Ethiopia", "ETH",
ifelse(ALPHA3 == "UK", "GBR", ALPHA3))))))
View(db_herd)
View(all_data)
View(db_irr)
