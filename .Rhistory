mapping_country <- read_excel(here("data", "mapping_country_FAO_FABLE.xlsx")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Country_FAO, origin = "country.name", destination = "iso3c"))
mapping_ALPHA3 <- read_excel(here("data",  "mapping_alpha3_Country.xlsx")) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3))
fao_prod$Area <- as.character(fao_prod$Area)
fao_prod[which(fao_prod$Area == "United Kingdom of Great Britain and Northern Ireland"), "Area"] <- "United Kingdom"
product_dt <- left_join(product,
# rename(alpha3 = country) %>%
# mutate(alpha3 = as.character(alpha3)) %>%
# select(#-id,
#   -scenathon_id),
df,
# rename(alpha3 = country) %>%
# select(#-id,
#   -scenathon_id),
by = c("country", "pathway", "year")) %>%
rename(ALPHA3 = country) %>%
mutate(pathway = recode(pathway, "CurrentTrends" = "CurrentTrend")) %>%
left_join(mapping_ALPHA3) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
unique()
##Compute kcal/kg data from FAO 2020
df_fao <- fao_prod %>%
left_join(mapping %>% select(FPRODUCT, FAO) %>% unique(), by = c("Item" = "FAO")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Area, origin = "country.name", destination = "iso3c")) %>%
left_join(mapping_country, by = c("iso3c")) %>%
left_join(mapping_ALPHA3, by = c("Country_FABLE" = "Country")) %>%
mutate(ALPHA3 = ifelse(Country_FABLE == "NPL", "NPL",
ifelse(Country_FABLE == "GRC", "GRC", ALPHA3))) %>%
select(ALPHA3, FPRODUCT, Element, Value)
View(df_fao)
View(fao_prod)
df <- df %>%
rename(ALPHA3 = country) %>%
rename(Pathway = pathway)
product <- product %>%
rename(ALPHA3 = country)
## Scenario selection
# libraries ---------------------------------------------------------------
library(here)
#library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(ggplot2)
library(stringr)
library(conflicted)
library(writexl)
library(openxlsx)
library(stats)
library(zoo)
library(cluster)
library(factoextra)
conflicted::conflict_prefer("rename", "dplyr")
conflicted::conflict_prefer("mutate", "dplyr")
conflicted::conflict_prefer("summarise", "dplyr")
here()
# file --------------------------------------------------------------------
file <- list.files(path = here("data", "Calcs_new"))
# data --------------------------------------------------------------------
df <- read.csv(here("data", "240424_FullDataBase.csv"), sep = "") %>%
dplyr::filter(tradeadjustment == "No")
product <- read.csv(here("data",  "240424_FullProductDataBase.csv"),sep = "")  %>%
dplyr::filter(tradeadjustment == "No")
mapping_F6 <- read_excel(here("data",  "DataForFoodFigures.xlsx"),
sheet = "prod groups map")
db_scenarios <- read.csv(here("data", "240424_scenarios.csv")) %>%
select(pathway, country, afforestation,agricultural_land_expansion)%>%
rename(ALPHA3 = country,
Pathway = pathway) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
unique()
fao_prod <- read.csv(here("data", "FAO_FoodBalance.csv"))
fao_prod$Item <- ifelse(fao_prod$Item == "Rice and products", "Rice (Milled Equivalent)", fao_prod$Item)
# mapping_animalprod <- read.csv(here("data", "FAOSTAT_mapping_animalprod.csv"))
# fao_prod <- fao_prod %>%
#   inner_join(mapping_animalprod, by = "Item")
mapping <- read_excel(here("data",  "mapping_GAMS_FAO_products.xlsx"))
mapping[which(mapping$FAO == "Groundnuts (Shelled Eq)"), "FAO"] <- "Groundnuts"
mapping_country <- read_excel(here("data", "mapping_country_FAO_FABLE.xlsx")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Country_FAO, origin = "country.name", destination = "iso3c"))
mapping_ALPHA3 <- read_excel(here("data",  "mapping_alpha3_Country.xlsx")) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3))
fao_prod$Area <- as.character(fao_prod$Area)
fao_prod[which(fao_prod$Area == "United Kingdom of Great Britain and Northern Ireland"), "Area"] <- "United Kingdom"
product_dt <- left_join(product,
# rename(alpha3 = country) %>%
# mutate(alpha3 = as.character(alpha3)) %>%
# select(#-id,
#   -scenathon_id),
df,
# rename(alpha3 = country) %>%
# select(#-id,
#   -scenathon_id),
by = c("country", "pathway", "year")) %>%
rename(ALPHA3 = country) %>%
mutate(pathway = recode(pathway, "CurrentTrends" = "CurrentTrend")) %>%
left_join(mapping_ALPHA3) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
unique()
##Compute kcal/kg data from FAO 2020
df_fao <- fao_prod %>%
left_join(mapping %>% select(FPRODUCT, FAO) %>% unique(), by = c("Item" = "FAO")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Area, origin = "country.name", destination = "iso3c")) %>%
left_join(mapping_country, by = c("iso3c")) %>%
left_join(mapping_ALPHA3, by = c("Country_FABLE" = "Country")) %>%
mutate(ALPHA3 = ifelse(Country_FABLE == "NPL", "NPL",
ifelse(Country_FABLE == "GRC", "GRC", ALPHA3))) %>%
select(ALPHA3, FPRODUCT, Element, Value)
df <- df %>%
rename(ALPHA3 = country) %>%
rename(Pathway = pathway)
product <- product %>%
rename(ALPHA3 = country)
#Computing Kcal content per Kg
df_fao <- (df_fao %>%
group_by(ALPHA3, FPRODUCT, Element) %>%
dplyr::summarise_at(vars(Value),
sum,
na.rm = T) %>%
pivot_wider(names_from = Element,
values_from = Value) %>%
dplyr::rename(kg = "Food supply quantity (kg/capita/yr)",
kcal = "Food supply (kcal/capita/day)") %>%
mutate(kcal.kg = ifelse(kg!=0,
kcal/kg,
NA)) %>%
# mutate(ALPHA3 = ifelse(ALPHA3 == "NMC", "RMECAS", ALPHA3)) %>%
data.frame())
product_df <- left_join(product_dt, df_fao, by = c("ALPHA3" = "ALPHA3", "product" = "FPRODUCT")) %>%
rename(Pathway = pathway)
View(df_fao)
View(fao_prod)
##Compute kcal/kg data from FAO 2020
df_fao <- fao_prod %>%
left_join(mapping %>% select(FPRODUCT, FAO) %>% unique(), by = c("Item" = "FAO"))
View(df_fao)
View(mapping)
mapping[which(mapping$FAO == "Groundnuts (Shelled Eq)"), "FAO"] <- "Groundnuts"
View(mapping)
View(fao_prod)
fao_prod <- read.csv(here("data", "FAO_FoodBalance.csv"))
fao_prod$Item <- ifelse(fao_prod$Item == "Rice and products", "Rice (Milled Equivalent)",
ifelse(fao_prod$Item == "Groundnuts", "Groundnuts (in Shell Eq)",
ifelse(fao_prod$Item == "Vegetables, other", "Vegetables, Other",
fao_prod$Item)))
mapping <- read_excel(here("data",  "mapping_GAMS_FAO_products.xlsx"))
mapping[which(mapping$FAO == "Groundnuts (Shelled Eq)"), "FAO"] <- "Groundnuts"
mapping_country <- read_excel(here("data", "mapping_country_FAO_FABLE.xlsx")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Country_FAO, origin = "country.name", destination = "iso3c"))
mapping_ALPHA3 <- read_excel(here("data",  "mapping_alpha3_Country.xlsx")) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3))
fao_prod$Area <- as.character(fao_prod$Area)
fao_prod[which(fao_prod$Area == "United Kingdom of Great Britain and Northern Ireland"), "Area"] <- "United Kingdom"
df_fao <- fao_prod %>%
left_join(mapping %>% select(FPRODUCT, FAO) %>% unique(), by = c("Item" = "FAO"))
View(df_fao)
fao_prod <- read.csv(here("data", "FAO_FoodBalance.csv"))
fao_prod$Item <- ifelse(fao_prod$Item == "Rice and products", "Rice (Milled Equivalent)",
ifelse(fao_prod$Item == "Groundnuts", "Groundnuts (in Shell Eq)",
ifelse(fao_prod$Item == "Vegetables, other", "Vegetables, Other",
ifelse(fao_prod$Item == "Fruits, other", "Fruits, Other",
ifelse(fao_prod$Item == "Freshwater Fish", "Fish Seafood + (Total)",
ifelse(fao_prod$Item == "Meat, Other", "Meat Other",
ifelse(fao_prod$Item == "Offals, Edible", "Offals Edible",
fao_prod$Item)))))))
mapping <- read_excel(here("data",  "mapping_GAMS_FAO_products.xlsx"))
mapping[which(mapping$FAO == "Groundnuts (Shelled Eq)"), "FAO"] <- "Groundnuts"
mapping_country <- read_excel(here("data", "mapping_country_FAO_FABLE.xlsx")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Country_FAO, origin = "country.name", destination = "iso3c"))
mapping_ALPHA3 <- read_excel(here("data",  "mapping_alpha3_Country.xlsx")) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3))
fao_prod$Area <- as.character(fao_prod$Area)
fao_prod[which(fao_prod$Area == "United Kingdom of Great Britain and Northern Ireland"), "Area"] <- "United Kingdom"
##Compute kcal/kg data from FAO 2020
df_fao <- fao_prod %>%
left_join(mapping %>% select(FPRODUCT, FAO) %>% unique(), by = c("Item" = "FAO"))
##Compute kcal/kg data from FAO 2020
df_fao <- fao_prod %>%
left_join(mapping %>% select(FPRODUCT, FAO) %>% unique(), by = c("Item" = "FAO")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Area, origin = "country.name", destination = "iso3c")) %>%
left_join(mapping_country, by = c("iso3c")) %>%
left_join(mapping_ALPHA3, by = c("Country_FABLE" = "Country")) %>%
mutate(ALPHA3 = ifelse(Country_FABLE == "NPL", "NPL",
ifelse(Country_FABLE == "GRC", "GRC", ALPHA3))) %>%
select(ALPHA3, FPRODUCT, Element, Value)
df <- df %>%
rename(ALPHA3 = country) %>%
rename(Pathway = pathway)
## Scenario selection
# libraries ---------------------------------------------------------------
library(here)
#library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(ggplot2)
library(stringr)
library(conflicted)
library(writexl)
library(openxlsx)
library(stats)
library(zoo)
library(cluster)
library(factoextra)
conflicted::conflict_prefer("rename", "dplyr")
conflicted::conflict_prefer("mutate", "dplyr")
conflicted::conflict_prefer("summarise", "dplyr")
here()
# file --------------------------------------------------------------------
file <- list.files(path = here("data", "Calcs_new"))
# data --------------------------------------------------------------------
df <- read.csv(here("data", "240424_FullDataBase.csv"), sep = "") %>%
dplyr::filter(tradeadjustment == "No")
product <- read.csv(here("data",  "240424_FullProductDataBase.csv"),sep = "")  %>%
dplyr::filter(tradeadjustment == "No")
mapping_F6 <- read_excel(here("data",  "DataForFoodFigures.xlsx"),
sheet = "prod groups map")
db_scenarios <- read.csv(here("data", "240424_scenarios.csv")) %>%
select(pathway, country, afforestation,agricultural_land_expansion)%>%
rename(ALPHA3 = country,
Pathway = pathway) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
unique()
fao_prod <- read.csv(here("data", "FAO_FoodBalance.csv"))
fao_prod$Item <- ifelse(fao_prod$Item == "Rice and products", "Rice (Milled Equivalent)",
ifelse(fao_prod$Item == "Groundnuts", "Groundnuts (in Shell Eq)",
ifelse(fao_prod$Item == "Vegetables, other", "Vegetables, Other",
ifelse(fao_prod$Item == "Fruits, other", "Fruits, Other",
ifelse(fao_prod$Item == "Freshwater Fish", "Fish Seafood + (Total)",
ifelse(fao_prod$Item == "Meat, Other", "Meat Other",
ifelse(fao_prod$Item == "Offals, Edible", "Offals Edible",
fao_prod$Item)))))))
# mapping_animalprod <- read.csv(here("data", "FAOSTAT_mapping_animalprod.csv"))
# fao_prod <- fao_prod %>%
#   inner_join(mapping_animalprod, by = "Item")
mapping <- read_excel(here("data",  "mapping_GAMS_FAO_products.xlsx"))
mapping[which(mapping$FAO == "Groundnuts (Shelled Eq)"), "FAO"] <- "Groundnuts"
mapping_country <- read_excel(here("data", "mapping_country_FAO_FABLE.xlsx")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Country_FAO, origin = "country.name", destination = "iso3c"))
mapping_ALPHA3 <- read_excel(here("data",  "mapping_alpha3_Country.xlsx")) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3))
fao_prod$Area <- as.character(fao_prod$Area)
fao_prod[which(fao_prod$Area == "United Kingdom of Great Britain and Northern Ireland"), "Area"] <- "United Kingdom"
product_dt <- left_join(product,
# rename(alpha3 = country) %>%
# mutate(alpha3 = as.character(alpha3)) %>%
# select(#-id,
#   -scenathon_id),
df,
# rename(alpha3 = country) %>%
# select(#-id,
#   -scenathon_id),
by = c("country", "pathway", "year")) %>%
rename(ALPHA3 = country) %>%
mutate(pathway = recode(pathway, "CurrentTrends" = "CurrentTrend")) %>%
left_join(mapping_ALPHA3) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
unique()
##Compute kcal/kg data from FAO 2020
df_fao <- fao_prod %>%
left_join(mapping %>% select(FPRODUCT, FAO) %>% unique(), by = c("Item" = "FAO")) %>%
mutate(iso3c = countrycode::countrycode(sourcevar = Area, origin = "country.name", destination = "iso3c")) %>%
left_join(mapping_country, by = c("iso3c")) %>%
left_join(mapping_ALPHA3, by = c("Country_FABLE" = "Country")) %>%
mutate(ALPHA3 = ifelse(Country_FABLE == "NPL", "NPL",
ifelse(Country_FABLE == "GRC", "GRC", ALPHA3))) %>%
select(ALPHA3, FPRODUCT, Element, Value)
df <- df %>%
rename(ALPHA3 = country) %>%
rename(Pathway = pathway)
product <- product %>%
rename(ALPHA3 = country)
#Computing Kcal content per Kg
df_fao <- (df_fao %>%
group_by(ALPHA3, FPRODUCT, Element) %>%
dplyr::summarise_at(vars(Value),
sum,
na.rm = T) %>%
pivot_wider(names_from = Element,
values_from = Value) %>%
dplyr::rename(kg = "Food supply quantity (kg/capita/yr)",
kcal = "Food supply (kcal/capita/day)") %>%
mutate(kcal.kg = ifelse(kg!=0,
kcal/kg,
NA)) %>%
# mutate(ALPHA3 = ifelse(ALPHA3 == "NMC", "RMECAS", ALPHA3)) %>%
data.frame())
product_df <- left_join(product_dt, df_fao, by = c("ALPHA3" = "ALPHA3", "product" = "FPRODUCT")) %>%
rename(Pathway = pathway)
#####################
#Computing Population and Kcal target relative change 2020-2050
df_change <- df %>%
slice(which(year %in% c(2020, 2050))) %>%
select(ALPHA3, Pathway, year, population, kcal_targ) %>%
unique() %>%
pivot_wider(names_from = year,
values_from = c(population, kcal_targ)) %>%
mutate(Population_change = round(population_2050/population_2020, 2)) %>%
mutate(kcal_targ_change = round(kcal_targ_2050/kcal_targ_2020,2)) %>%
select(ALPHA3, Pathway, Population_change, kcal_targ_change) %>%
# mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments")) %>%
data.frame() %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "RMECAS", "R_NMC", ALPHA3))
#Computing imports and exports quantity relative changes 2020-2050, using Kcal per Kg to aggregate all products
product_tot <- product_df %>%
slice(which(year %in% c(2020, 2050))) %>%
mutate(Pathway = recode(Pathway, "CurrentTrends" = "CurrentTrend")) %>%
mutate(Export_quantity = export_quantity * kcal.kg) %>%
mutate(Import_quantity = import_quantity * kcal.kg) %>%
group_by(ALPHA3, Pathway, year) %>%
dplyr::summarise(Export_quantity = sum(Export_quantity, na.rm = T),
Import_quantity = sum(Import_quantity, na.rm = T)) %>%
select(ALPHA3, Pathway, year,
Export_quantity, Import_quantity) %>%
pivot_wider(names_from = year,
values_from = c(Export_quantity, Import_quantity)) %>%
mutate(Export_quantity_change = round(Export_quantity_2050/Export_quantity_2020, 2)) %>%
mutate(Import_quantity_change = round(Import_quantity_2050/Import_quantity_2020, 2)) %>%
select(ALPHA3, Pathway, Export_quantity_change, Import_quantity_change) %>%
mutate(ALPHA3 = gsub("R_", "", ALPHA3)) %>%
data.frame() %>%
## manually put lower for NPL because way too high and can't see the others
mutate(Export_quantity_change = ifelse(ALPHA3 == "NPL", 4, Export_quantity_change)) %>%
# mutate(Import_quantity_change = ifelse(ALPHA3 == "ETH", 4, Import_quantity_change)) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments")) %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "ASP", "R_ASP",
ifelse(ALPHA3 == "CSA", "R_CSA",
ifelse(ALPHA3 == "NEU", "R_NEU",
ifelse(ALPHA3 == "OEU", "R_OEU",
ifelse(ALPHA3 == "SSA", "R_SSA",
ifelse(ALPHA3 == "NMC", "R_NMC", ALPHA3)))))))
View(product_tot)
View(df_change)
db_full_waste <- readxl::read_excel(here("data", "extracted_scenathon", "20240425_ExtractedFoodWaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2020) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE)) %>%
mutate(weight =  100 * kcal / total_kcal) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, FPRODUCT) %>%
mutate(food_waste_weighted = food_waste * weight)
View(db_change_foodwaste)
options(scipen=999)
#Computing share of food waste relative change 2020 - 2050
db_change_foodwaste <- db_change_foodwaste %>%
select(year, ALPHA3, Pathway, FPRODUCT, food_waste_weighted) %>%
pivot_wider(names_from = year, names_glue = "Foodwaste_{year}", values_from = food_waste_weighted)
View(db_change_foodwaste)
db_full_waste <- readxl::read_excel(here("data", "extracted_scenathon", "20240425_ExtractedFoodWaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2020) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE))
View(db_change_foodwaste)
View(df_fao)
View(df_fao)
db_full_waste <- readxl::read_excel(here("data", "extracted_scenathon", "20240425_ExtractedFoodWaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2020) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE))
View(db_change_foodwaste)
db_full_waste <- readxl::read_excel(here("data", "extracted_scenathon", "20240425_ExtractedFoodWaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2020) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE))
View(db_full_waste)
db_full_waste <- readxl::read_excel(here("data", "extracted_scenathon", "20240425_ExtractedFoodWaste.xlsx")) %>%
# mutate(ALPHA3 = ifelse(nchar(ALPHA3) == 4, stringr::str_sub(ALPHA3, 2, 4), ALPHA3)) %>%
rename(FPRODUCT = fproduct) %>%
mutate(FPRODUCT = ifelse(FPRODUCT == "MILK", "milk", FPRODUCT))
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2020) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal))
View(db_change_foodwaste)
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2020) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE))
View(db_change_foodwaste)
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2020) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE)) %>%
ungroup() %>%
mutate(kcal_without_fw = kcal/(1-food_waste))
View(db_change_foodwaste)
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2020) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE)) %>%
ungroup() %>%
mutate(kcal_without_fw = kcal/(1-food_waste)) %>%
mutate(food_waste_kcal = kcal_without_fw - kcal)
View(db_change_foodwaste)
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2020) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE)) %>%
ungroup() %>%
mutate(kcal_without_fw = kcal/(1-food_waste)) %>%
mutate(food_waste_kcal = kcal_without_fw - kcal) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(sum_food_waste_kcal = sum(food_waste_kcal))
View(db_change_foodwaste)
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2050) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE)) %>%
ungroup() %>%
mutate(kcal_without_fw = kcal/(1-food_waste)) %>%
mutate(food_waste_kcal = kcal_without_fw - kcal) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(sum_food_waste_kcal = sum(food_waste_kcal)) %>%
mutate(food_waste2050 = sum_food_waste_kcal/total_kcal)
View(db_change_foodwaste)
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2050) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE)) %>% ##from here added new lines (See if the results makes sense)
ungroup() %>%
mutate(kcal_without_fw = kcal/(1-food_waste)) %>%
mutate(food_waste_kcal = kcal_without_fw - kcal) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(sum_food_waste_kcal = sum(food_waste_kcal)) %>%
mutate(food_waste2050 = sum_food_waste_kcal/total_kcal) %>%
select(year, ALPHA3, Pathway, food_waste2050)
View(db_change_foodwaste)
#Computing weighted Food waste: share of product kcal content to total Kcal content
db_change_foodwaste <- db_full_waste %>%
dplyr::filter(year==2050) %>%
mutate(FPRODUCT = tolower(FPRODUCT)) %>%
left_join(df_fao) %>%
dplyr::filter(!is.na(kcal)) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(total_kcal = sum(kcal, na.rm = TRUE)) %>% ##from here added new lines (See if the results makes sense)
ungroup() %>%
mutate(kcal_without_fw = kcal/(1-food_waste)) %>%
mutate(food_waste_kcal = kcal_without_fw - kcal) %>%
group_by(year, ALPHA3, Pathway) %>%
mutate(sum_food_waste_kcal = sum(food_waste_kcal)) %>%
mutate(food_waste2050 = sum_food_waste_kcal/total_kcal) %>%
select(year, ALPHA3, Pathway, food_waste2050) %>%
unique()
View(db_change_foodwaste)
################ To verify if works
db_change_foodwaste <- db_change_foodwaste %>%
pivot_wider(names_from = year, names_glue = "Foodwaste_{year}", values_from = food_waste2050)
View(db_change_foodwaste)
